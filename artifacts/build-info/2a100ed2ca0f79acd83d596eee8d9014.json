{
	"id": "2a100ed2ca0f79acd83d596eee8d9014",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"ethernaut/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract CoinFlip{\n\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n  constructor() {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) external returns (bool) {\n    uint256 blockValue = uint256(blockhash(block.number - 1));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue / FACTOR;\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut/CoinFlip.sol\":57:713  contract CoinFlip{... */\n  mstore(0x40, 0x80)\n  shl(0xff, 0x01)\n    /* \"ethernaut/CoinFlip.sol\":133:227  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"ethernaut/CoinFlip.sol\":232:276  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ethernaut/CoinFlip.sol\":270:271  0 */\n  0x00\n    /* \"ethernaut/CoinFlip.sol\":252:271  consecutiveWins = 0 */\n  dup1\n  sstore\n    /* \"ethernaut/CoinFlip.sol\":57:713  contract CoinFlip{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut/CoinFlip.sol\":57:713  contract CoinFlip{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut/CoinFlip.sol\":280:711  function flip(bool _guess) external returns (bool) {... */\n    tag_3:\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n        /* \"#utility.yul\":457:471   */\n      swap1\n      iszero\n        /* \"#utility.yul\":450:472   */\n      iszero\n        /* \"#utility.yul\":432:473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":420:422   */\n      0x20\n        /* \"#utility.yul\":405:423   */\n      add\n        /* \"ethernaut/CoinFlip.sol\":280:711  function flip(bool _guess) external returns (bool) {... */\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut/CoinFlip.sol\":79:109  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      sload(0x00)\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n        /* \"#utility.yul\":630:655   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":618:620   */\n      0x20\n        /* \"#utility.yul\":603:621   */\n      add\n        /* \"ethernaut/CoinFlip.sol\":79:109  uint256 public consecutiveWins */\n      tag_9\n        /* \"#utility.yul\":484:661   */\n      jump\n        /* \"ethernaut/CoinFlip.sol\":280:711  function flip(bool _guess) external returns (bool) {... */\n    tag_8:\n        /* \"ethernaut/CoinFlip.sol\":325:329  bool */\n      0x00\n      dup1\n        /* \"ethernaut/CoinFlip.sol\":376:392  block.number - 1 */\n      tag_16\n        /* \"ethernaut/CoinFlip.sol\":391:392  1 */\n      0x01\n        /* \"ethernaut/CoinFlip.sol\":376:388  block.number */\n      number\n        /* \"ethernaut/CoinFlip.sol\":376:392  block.number - 1 */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"ethernaut/CoinFlip.sol\":366:393  blockhash(block.number - 1) */\n      blockhash\n        /* \"ethernaut/CoinFlip.sol\":358:394  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"ethernaut/CoinFlip.sol\":337:394  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"ethernaut/CoinFlip.sol\":417:427  blockValue */\n      dup1\n        /* \"ethernaut/CoinFlip.sol\":405:413  lastHash */\n      sload(0x01)\n        /* \"ethernaut/CoinFlip.sol\":405:427  lastHash == blockValue */\n      sub\n        /* \"ethernaut/CoinFlip.sol\":401:452  if (lastHash == blockValue) {... */\n      tag_18\n      jumpi\n        /* \"ethernaut/CoinFlip.sol\":437:445  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernaut/CoinFlip.sol\":401:452  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"ethernaut/CoinFlip.sol\":458:466  lastHash */\n      0x01\n        /* \"ethernaut/CoinFlip.sol\":458:479  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n        /* \"ethernaut/CoinFlip.sol\":517:523  FACTOR */\n      sload(0x02)\n        /* \"ethernaut/CoinFlip.sol\":485:501  uint256 coinFlip */\n      0x00\n      swap1\n        /* \"ethernaut/CoinFlip.sol\":504:523  blockValue / FACTOR */\n      tag_19\n      swap1\n        /* \"ethernaut/CoinFlip.sol\":469:479  blockValue */\n      dup4\n        /* \"ethernaut/CoinFlip.sol\":504:523  blockValue / FACTOR */\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"ethernaut/CoinFlip.sol\":485:523  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"ethernaut/CoinFlip.sol\":529:538  bool side */\n      0x00\n        /* \"ethernaut/CoinFlip.sol\":541:549  coinFlip */\n      dup2\n        /* \"ethernaut/CoinFlip.sol\":553:554  1 */\n      0x01\n        /* \"ethernaut/CoinFlip.sol\":541:554  coinFlip == 1 */\n      eq\n        /* \"ethernaut/CoinFlip.sol\":541:569  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"ethernaut/CoinFlip.sol\":564:569  false */\n      0x00\n        /* \"ethernaut/CoinFlip.sol\":541:569  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"ethernaut/CoinFlip.sol\":557:561  true */\n      0x01\n        /* \"ethernaut/CoinFlip.sol\":541:569  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"ethernaut/CoinFlip.sol\":529:569  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"ethernaut/CoinFlip.sol\":588:594  _guess */\n      dup5\n        /* \"ethernaut/CoinFlip.sol\":580:594  side == _guess */\n      iszero\n      iszero\n        /* \"ethernaut/CoinFlip.sol\":580:584  side */\n      dup2\n        /* \"ethernaut/CoinFlip.sol\":580:594  side == _guess */\n      iszero\n      iszero\n      sub\n        /* \"ethernaut/CoinFlip.sol\":576:707  if (side == _guess) {... */\n      tag_23\n      jumpi\n        /* \"ethernaut/CoinFlip.sol\":604:619  consecutiveWins */\n      0x00\n        /* \"ethernaut/CoinFlip.sol\":604:621  consecutiveWins++ */\n      dup1\n      sload\n      swap1\n        /* \"ethernaut/CoinFlip.sol\":604:619  consecutiveWins */\n      dup1\n        /* \"ethernaut/CoinFlip.sol\":604:621  consecutiveWins++ */\n      tag_24\n      dup4\n      tag_25\n      jump\t// in\n    tag_24:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"ethernaut/CoinFlip.sol\":636:640  true */\n      0x01\n      swap7\n        /* \"ethernaut/CoinFlip.sol\":280:711  function flip(bool _guess) external returns (bool) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ethernaut/CoinFlip.sol\":576:707  if (side == _guess) {... */\n    tag_23:\n      pop\n      pop\n        /* \"ethernaut/CoinFlip.sol\":679:680  0 */\n      0x00\n        /* \"ethernaut/CoinFlip.sol\":661:680  consecutiveWins = 0 */\n      dup1\n      dup1\n      sstore\n        /* \"ethernaut/CoinFlip.sol\":679:680  0 */\n      swap4\n        /* \"ethernaut/CoinFlip.sol\":280:711  function flip(bool _guess) external returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:287   */\n    tag_7:\n        /* \"#utility.yul\":70:76   */\n      0x00\n        /* \"#utility.yul\":123:125   */\n      0x20\n        /* \"#utility.yul\":111:120   */\n      dup3\n        /* \"#utility.yul\":102:109   */\n      dup5\n        /* \"#utility.yul\":98:121   */\n      sub\n        /* \"#utility.yul\":94:126   */\n      slt\n        /* \"#utility.yul\":91:143   */\n      iszero\n      tag_30\n      jumpi\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":136:137   */\n      dup1\n        /* \"#utility.yul\":129:141   */\n      revert\n        /* \"#utility.yul\":91:143   */\n    tag_30:\n        /* \"#utility.yul\":178:187   */\n      dup2\n        /* \"#utility.yul\":165:188   */\n      calldataload\n        /* \"#utility.yul\":231:236   */\n      dup1\n        /* \"#utility.yul\":224:237   */\n      iszero\n        /* \"#utility.yul\":217:238   */\n      iszero\n        /* \"#utility.yul\":210:215   */\n      dup2\n        /* \"#utility.yul\":207:239   */\n      eq\n        /* \"#utility.yul\":197:257   */\n      tag_31\n      jumpi\n        /* \"#utility.yul\":253:254   */\n      0x00\n        /* \"#utility.yul\":250:251   */\n      dup1\n        /* \"#utility.yul\":243:255   */\n      revert\n        /* \"#utility.yul\":197:257   */\n    tag_31:\n        /* \"#utility.yul\":276:281   */\n      swap4\n        /* \"#utility.yul\":14:287   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":666:793   */\n    tag_27:\n        /* \"#utility.yul\":727:737   */\n      0x4e487b71\n        /* \"#utility.yul\":722:725   */\n      0xe0\n        /* \"#utility.yul\":718:738   */\n      shl\n        /* \"#utility.yul\":715:716   */\n      0x00\n        /* \"#utility.yul\":708:739   */\n      mstore\n        /* \"#utility.yul\":758:762   */\n      0x11\n        /* \"#utility.yul\":755:756   */\n      0x04\n        /* \"#utility.yul\":748:763   */\n      mstore\n        /* \"#utility.yul\":782:786   */\n      0x24\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":772:787   */\n      revert\n        /* \"#utility.yul\":798:926   */\n    tag_17:\n        /* \"#utility.yul\":865:874   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":886:897   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":883:920   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":900:918   */\n      tag_37\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":798:926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":931:1148   */\n    tag_20:\n        /* \"#utility.yul\":971:972   */\n      0x00\n        /* \"#utility.yul\":997:998   */\n      dup3\n        /* \"#utility.yul\":987:1119   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":1041:1051   */\n      0x4e487b71\n        /* \"#utility.yul\":1036:1039   */\n      0xe0\n        /* \"#utility.yul\":1032:1052   */\n      shl\n        /* \"#utility.yul\":1029:1030   */\n      0x00\n        /* \"#utility.yul\":1022:1053   */\n      mstore\n        /* \"#utility.yul\":1076:1080   */\n      0x12\n        /* \"#utility.yul\":1073:1074   */\n      0x04\n        /* \"#utility.yul\":1066:1081   */\n      mstore\n        /* \"#utility.yul\":1104:1108   */\n      0x24\n        /* \"#utility.yul\":1101:1102   */\n      0x00\n        /* \"#utility.yul\":1094:1109   */\n      revert\n        /* \"#utility.yul\":987:1119   */\n    tag_39:\n      pop\n        /* \"#utility.yul\":1133:1142   */\n      div\n      swap1\n        /* \"#utility.yul\":931:1148   */\n      jump\t// out\n        /* \"#utility.yul\":1153:1288   */\n    tag_25:\n        /* \"#utility.yul\":1192:1195   */\n      0x00\n        /* \"#utility.yul\":1213:1230   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":1210:1253   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1233:1251   */\n      tag_42\n      tag_27\n      jump\t// in\n    tag_42:\n      pop\n        /* \"#utility.yul\":1280:1281   */\n      0x01\n        /* \"#utility.yul\":1269:1282   */\n      add\n      swap1\n        /* \"#utility.yul\":1153:1288   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a9171db955ff9264d81764180529e00b34902d19ca0ba106517fd669791b82dc64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600160ff1b60025534801561001857600080fd5b50600080556101ca8061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610101565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088600143610140565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b19083610159565b90506000816001146100c45760006100c7565b60015b9050841515811515036100f3576000805490806100e38361017b565b9091555060019695505050505050565b505060008080559392505050565b60006020828403121561011357600080fd5b8135801515811461012357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101535761015361012a565b92915050565b60008261017657634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161018d5761018d61012a565b506001019056fea2646970667358221220a9171db955ff9264d81764180529e00b34902d19ca0ba106517fd669791b82dc64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SSTORE PUSH2 0x1CA DUP1 PUSH2 0x2C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x101 JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x88 PUSH1 0x1 NUMBER PUSH2 0x140 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB1 SWAP1 DUP4 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 PUSH2 0xE3 DUP4 PUSH2 0x17B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 DUP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x153 JUMPI PUSH2 0x153 PUSH2 0x12A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x176 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x18D JUMPI PUSH2 0x18D PUSH2 0x12A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 OR SAR 0xB9 SSTORE SELFDESTRUCT SWAP3 PUSH5 0xD817641805 0x29 0xE0 SIGNEXTEND CALLVALUE SWAP1 0x2D NOT 0xCA SIGNEXTEND LOG1 MOD MLOAD PUSH32 0xD669791B82DC64736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "57:656:0:-:0;;;-1:-1:-1;;;133:94:0;;232:44;;;;;;;;;-1:-1:-1;270:1:0;252:19;;57:656;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flip_80": {
									"entryPoint": 122,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 298,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1290:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "81:206:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "102:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "111:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "123:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "94:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "94:32:1"
															},
															"nodeType": "YulIf",
															"src": "91:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "156:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "241:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "250:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "253:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "243:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "243:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "243:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "210:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "231:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "224:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "224:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "217:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "217:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "207:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "207:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "200:40:1"
															},
															"nodeType": "YulIf",
															"src": "197:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "266:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "276:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "266:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "47:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "58:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "70:6:1",
														"type": ""
													}
												],
												"src": "14:273:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "387:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "397:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "409:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "405:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "397:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "439:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "464:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "457:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "457:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "450:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "432:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "432:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "356:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "367:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "378:4:1",
														"type": ""
													}
												],
												"src": "292:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "585:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "595:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "607:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "618:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "603:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "595:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "637:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "630:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "630:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "630:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "554:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "565:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "576:4:1",
														"type": ""
													}
												],
												"src": "484:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "722:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "727:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "718:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "718:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "708:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "708:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "758:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "748:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "748:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "779:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "782:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "772:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "772:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "772:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "666:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "857:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "869:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "872:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "857:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "898:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "900:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "900:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "900:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "889:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "895:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "886:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:11:1"
															},
															"nodeType": "YulIf",
															"src": "883:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "829:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "832:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "838:4:1",
														"type": ""
													}
												],
												"src": "798:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1008:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1036:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1041:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1032:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1032:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1022:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1073:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1076:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1066:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1066:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1104:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1094:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1094:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "997:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "990:9:1"
															},
															"nodeType": "YulIf",
															"src": "987:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1128:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1137:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1140:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1128:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "962:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "965:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "971:1:1",
														"type": ""
													}
												],
												"src": "931:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1200:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1233:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1216:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1227:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1223:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1223:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1213:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:17:1"
															},
															"nodeType": "YulIf",
															"src": "1210:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1262:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1273:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1280:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1269:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1262:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1182:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1192:3:1",
														"type": ""
													}
												],
												"src": "1153:135:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d714610063575b600080fd5b61004e610049366004610101565b61007a565b60405190151581526020015b60405180910390f35b61006c60005481565b60405190815260200161005a565b600080610088600143610140565b4060001c9050806001540361009c57600080fd5b60018190556002546000906100b19083610159565b90506000816001146100c45760006100c7565b60015b9050841515811515036100f3576000805490806100e38361017b565b9091555060019695505050505050565b505060008080559392505050565b60006020828403121561011357600080fd5b8135801515811461012357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101535761015361012a565b92915050565b60008261017657634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161018d5761018d61012a565b506001019056fea2646970667358221220a9171db955ff9264d81764180529e00b34902d19ca0ba106517fd669791b82dc64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x101 JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x88 PUSH1 0x1 NUMBER PUSH2 0x140 JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD SUB PUSH2 0x9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xB1 SWAP1 DUP4 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 EQ PUSH2 0xC4 JUMPI PUSH1 0x0 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO SUB PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 PUSH2 0xE3 DUP4 PUSH2 0x17B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 DUP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x153 JUMPI PUSH2 0x153 PUSH2 0x12A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x176 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x18D JUMPI PUSH2 0x18D PUSH2 0x12A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 OR SAR 0xB9 SSTORE SELFDESTRUCT SWAP3 PUSH5 0xD817641805 0x29 0xE0 SIGNEXTEND CALLVALUE SWAP1 0x2D NOT 0xCA SIGNEXTEND LOG1 MOD MLOAD PUSH32 0xD669791B82DC64736F6C63430008120033000000000000000000000000000000 ",
							"sourceMap": "57:656:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;280:431;;;;;;:::i;:::-;;:::i;:::-;;;457:14:1;;450:22;432:41;;420:2;405:18;280:431:0;;;;;;;;79:30;;;;;;;;;630:25:1;;;618:2;603:18;79:30:0;484:177:1;280:431:0;325:4;;376:16;391:1;376:12;:16;:::i;:::-;366:27;358:36;;337:57;;417:10;405:8;;:22;401:51;;437:8;;;401:51;458:8;:21;;;517:6;;485:16;;504:19;;469:10;504:19;:::i;:::-;485:38;;529:9;541:8;553:1;541:13;:28;;564:5;541:28;;;557:4;541:28;529:40;;588:6;580:14;;:4;:14;;;576:131;;604:15;:17;;;:15;:17;;;:::i;:::-;;;;-1:-1:-1;636:4:0;;280:431;-1:-1:-1;;;;;;280:431:0:o;576:131::-;-1:-1:-1;;679:1:0;661:19;;;679:1;280:431;-1:-1:-1;;;280:431:0:o;14:273:1:-;70:6;123:2;111:9;102:7;98:23;94:32;91:52;;;139:1;136;129:12;91:52;178:9;165:23;231:5;224:13;217:21;210:5;207:32;197:60;;253:1;250;243:12;197:60;276:5;14:273;-1:-1:-1;;;14:273:1:o;666:127::-;727:10;722:3;718:20;715:1;708:31;758:4;755:1;748:15;782:4;779:1;772:15;798:128;865:9;;;886:11;;;883:37;;;900:18;;:::i;:::-;798:128;;;;:::o;931:217::-;971:1;997;987:132;;1041:10;1036:3;1032:20;1029:1;1022:31;1076:4;1073:1;1066:15;1104:4;1101:1;1094:15;987:132;-1:-1:-1;1133:9:1;;931:217::o;1153:135::-;1192:3;1213:17;;;1210:43;;1233:18;;:::i;:::-;-1:-1:-1;1280:1:1;1269:13;;1153:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "91600",
								"executionCost": "27259",
								"totalCost": "118859"
							},
							"external": {
								"consecutiveWins()": "2295",
								"flip(bool)": "51186"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 713,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 133,
									"end": 227,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 133,
									"end": 227,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 276,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 276,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 232,
									"end": 276,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 276,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 271,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 252,
									"end": 271,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 713,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 713,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 713,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 713,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 713,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a9171db955ff9264d81764180529e00b34902d19ca0ba106517fd669791b82dc64736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 713,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 280,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 280,
											"end": 711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 457,
											"end": 471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 471,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 450,
											"end": 472,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 432,
											"end": 473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 432,
											"end": 473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 420,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 405,
											"end": 423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 280,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 109,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 109,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79,
											"end": 109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 630,
											"end": 655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 630,
											"end": 655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 618,
											"end": 620,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 603,
											"end": 621,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 79,
											"end": 109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 484,
											"end": 661,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 280,
											"end": 711,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 280,
											"end": 711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 391,
											"end": 392,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 388,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 376,
											"end": 392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 376,
											"end": 392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 392,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 376,
											"end": 392,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 393,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 358,
											"end": 394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 358,
											"end": 394,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 337,
											"end": 394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 417,
											"end": 427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 413,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 405,
											"end": 413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 401,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 437,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 437,
											"end": 445,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 401,
											"end": 452,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 401,
											"end": 452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 458,
											"end": 479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 458,
											"end": 479,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 458,
											"end": 479,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 517,
											"end": 523,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 485,
											"end": 501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 504,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 504,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 469,
											"end": 479,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 504,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 523,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 504,
											"end": 523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 485,
											"end": 523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 485,
											"end": 523,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 554,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 541,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 564,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 541,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 557,
											"end": 561,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 541,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 529,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 529,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 594,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 580,
											"end": 594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 576,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 604,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 604,
											"end": 621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 604,
											"end": 621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 604,
											"end": 621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 604,
											"end": 621,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 636,
											"end": 640,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 640,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 280,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 576,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 576,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 679,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 661,
											"end": 680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 679,
											"end": 680,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 280,
											"end": 711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 280,
											"end": 711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 287,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 14,
											"end": 287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 70,
											"end": 76,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 111,
											"end": 120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 102,
											"end": 109,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 98,
											"end": 121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 94,
											"end": 126,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 91,
											"end": 143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 91,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 91,
											"end": 143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 136,
											"end": 137,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 129,
											"end": 141,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 91,
											"end": 143,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 91,
											"end": 143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 178,
											"end": 187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 224,
											"end": 237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 217,
											"end": 238,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 210,
											"end": 215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 207,
											"end": 239,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 197,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 197,
											"end": 257,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 253,
											"end": 254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 243,
											"end": 255,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 197,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 197,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 276,
											"end": 281,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 287,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 666,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 666,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 737,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 722,
											"end": 725,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 718,
											"end": 738,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 715,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 758,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 755,
											"end": 756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 782,
											"end": 786,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 798,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 798,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 865,
											"end": 874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 886,
											"end": 897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 886,
											"end": 897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 886,
											"end": 897,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 883,
											"end": 920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 883,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 883,
											"end": 920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 900,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 900,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 798,
											"end": 926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 798,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 798,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 798,
											"end": 926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 931,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 931,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 971,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 987,
											"end": 1119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1051,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1036,
											"end": 1039,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1032,
											"end": 1052,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1080,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1104,
											"end": 1108,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1109,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1119,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 987,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 931,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1153,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1230,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1213,
											"end": 1230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1213,
											"end": 1230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1210,
											"end": 1253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1233,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1269,
											"end": 1282,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1269,
											"end": 1282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ethernaut/CoinFlip.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/CoinFlip.sol\":{\"keccak256\":\"0x9c489e7843dd94328fa6458cd3f48341df5968500a2ae460e6dfc7db9f63fbca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://710680309c0bd38701e300b9d83755fd741a671b499df030e9e3d0a47574b6ad\",\"dweb:/ipfs/QmQsLCrspNRNujJhvsBkLuYHQp3VH2b8PSAZVropLJpVPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernaut/CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "ethernaut/CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "ethernaut/CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ethernaut/CoinFlip.sol": {
				"ast": {
					"absolutePath": "ethernaut/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							81
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 81,
							"linearizedBaseContracts": [
								81
							],
							"name": "CoinFlip",
							"nameLocation": "66:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 3,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "94:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "79:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "79:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "121:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "113:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "141:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 81,
									"src": "133:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "150:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "246:30:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 11,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "252:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "270:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "252:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "252:19:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:0"
									},
									"scope": 81,
									"src": "232:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "331:380:0",
										"statements": [
											{
												"assignments": [
													24
												],
												"declarations": [
													{
														"constant": false,
														"id": 24,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "345:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "337:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 23,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 34,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 28,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "376:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "382:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "376:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 30,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "391:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "376:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 27,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "366:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "366:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "358:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 25,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "358:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "358:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "337:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "405:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "405:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "401:51:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "429:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "437:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "437:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "437:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "458:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "469:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "458:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "458:21:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "493:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "485:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "504:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 50,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "517:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "504:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "485:38:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "534:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 79,
														"src": "529:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "529:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 55,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "541:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "553:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "541:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "564:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "541:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "557:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "529:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 62,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "580:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 63,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "588:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "580:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "653:54:0",
													"statements": [
														{
															"expression": {
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "661:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "679:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "661:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 74,
															"nodeType": "ExpressionStatement",
															"src": "661:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "695:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 22,
															"id": 76,
															"nodeType": "Return",
															"src": "688:12:0"
														}
													]
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "576:131:0",
												"trueBody": {
													"id": 70,
													"nodeType": "Block",
													"src": "596:51:0",
													"statements": [
														{
															"expression": {
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "604:17:0",
																"subExpression": {
																	"id": 65,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "604:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "604:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "636:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 22,
															"id": 69,
															"nodeType": "Return",
															"src": "629:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "289:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "299:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "294:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:13:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:6:0"
									},
									"scope": 81,
									"src": "280:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "57:656:0",
							"usedErrors": []
						}
					],
					"src": "32:681:0"
				},
				"id": 0
			}
		}
	}
}