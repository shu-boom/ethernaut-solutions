{
	"id": "4e33b8f9b38f4875468a9f4998531983",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.20",
	"solcLongVersion": "0.4.20+commit.3155dd80",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"ethernaut/BasicToken.sol": {
				"content": "pragma solidity ^0.4.20;\n\ncontract BasicToken {\n  \n  uint256 totalSupply_;\n  mapping(address => uint256) balances;\n  \n  function BasicToken(uint256 _initialSupply) public{\n    totalSupply_ = _initialSupply;\n    balances[msg.sender] = _initialSupply;\n  }\n\n  function totalSupply() public view returns (uint256) {\n    return totalSupply_;\n  }\n\n  function transfer(address _to, uint256 _value) public returns (bool) {\n    require(_to != address(0));\n    require(_value <= balances[msg.sender]);\n    balances[msg.sender] = balances[msg.sender] - _value;\n    balances[_to] = balances[_to] + _value;\n    return true;\n  }\n\n  function balanceOf(address _owner) public view returns (uint256) {\n    return balances[_owner];\n  }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut/BasicToken.sol": {
				"BasicToken": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_to",
									"type": "address"
								},
								{
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_initialSupply",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ethernaut/BasicToken.sol\":26:719  contract BasicToken {... */\n  mstore(0x40, 0x60)\n    /* \"ethernaut/BasicToken.sol\":120:253  function BasicToken(uint256 _initialSupply) public{... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n    /* \"ethernaut/BasicToken.sol\":176:188  totalSupply_ */\n  0x0\n    /* \"ethernaut/BasicToken.sol\":176:205  totalSupply_ = _initialSupply */\n  dup2\n  dup2\n  sstore\n  sub(exp(0x2, 0xa0), 0x1)\n    /* \"ethernaut/BasicToken.sol\":220:230  msg.sender */\n  caller\n    /* \"ethernaut/BasicToken.sol\":211:231  balances[msg.sender] */\n  and\n  dup2\n  mstore\n    /* \"ethernaut/BasicToken.sol\":211:219  balances */\n  0x1\n    /* \"ethernaut/BasicToken.sol\":120:253  function BasicToken(uint256 _initialSupply) public{... */\n  0x20\n    /* \"ethernaut/BasicToken.sol\":211:231  balances[msg.sender] */\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"ethernaut/BasicToken.sol\":211:248  balances[msg.sender] = _initialSupply */\n  sstore\n  pop\n  pop\n    /* \"ethernaut/BasicToken.sol\":26:719  contract BasicToken {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut/BasicToken.sol\":26:719  contract BasicToken {... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      and(div(calldataload(0x0), 0x100000000000000000000000000000000000000000000000000000000), 0xffffffff)\n      0x18160ddd\n      dup2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"ethernaut/BasicToken.sol\":257:340  function totalSupply() public view returns (uint256) {... */\n    tag_2:\n      jumpi(tag_5, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_5:\n      tag_6\n      jump(tag_7)\n    tag_6:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut/BasicToken.sol\":618:717  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_3:\n      jumpi(tag_8, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_8:\n      tag_6\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      jump(tag_10)\n        /* \"ethernaut/BasicToken.sol\":344:614  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_4:\n      jumpi(tag_11, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_11:\n      tag_12\n      and(calldataload(0x4), sub(exp(0x2, 0xa0), 0x1))\n      calldataload(0x24)\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ethernaut/BasicToken.sol\":257:340  function totalSupply() public view returns (uint256) {... */\n    tag_7:\n        /* \"ethernaut/BasicToken.sol\":301:308  uint256 */\n      0x0\n        /* \"ethernaut/BasicToken.sol\":323:335  totalSupply_ */\n      sload\n        /* \"ethernaut/BasicToken.sol\":257:340  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ethernaut/BasicToken.sol\":618:717  function balanceOf(address _owner) public view returns (uint256) {... */\n    tag_10:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"ethernaut/BasicToken.sol\":696:712  balances[_owner] */\n      and\n        /* \"ethernaut/BasicToken.sol\":674:681  uint256 */\n      0x0\n        /* \"ethernaut/BasicToken.sol\":696:712  balances[_owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ethernaut/BasicToken.sol\":696:704  balances */\n      0x1\n        /* \"ethernaut/BasicToken.sol\":696:712  balances[_owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ethernaut/BasicToken.sol\":618:717  function balanceOf(address _owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"ethernaut/BasicToken.sol\":344:614  function transfer(address _to, uint256 _value) public returns (bool) {... */\n    tag_13:\n        /* \"ethernaut/BasicToken.sol\":407:411  bool */\n      0x0\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"ethernaut/BasicToken.sol\":427:444  _to != address(0) */\n      dup4\n      and\n      iszero\n      iszero\n        /* \"ethernaut/BasicToken.sol\":419:445  require(_to != address(0)) */\n      tag_17\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_17:\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"ethernaut/BasicToken.sol\":478:488  msg.sender */\n      caller\n        /* \"ethernaut/BasicToken.sol\":469:489  balances[msg.sender] */\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"ethernaut/BasicToken.sol\":469:477  balances */\n      0x1\n        /* \"ethernaut/BasicToken.sol\":469:489  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ethernaut/BasicToken.sol\":459:489  _value <= balances[msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"ethernaut/BasicToken.sol\":451:490  require(_value <= balances[msg.sender]) */\n      tag_18\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_18:\n      pop\n      sub(exp(0x2, 0xa0), 0x1)\n        /* \"ethernaut/BasicToken.sol\":528:538  msg.sender */\n      caller\n        /* \"ethernaut/BasicToken.sol\":519:539  balances[msg.sender] */\n      dup2\n      and\n      0x0\n      swap1\n      dup2\n      mstore\n        /* \"ethernaut/BasicToken.sol\":519:527  balances */\n      0x1\n        /* \"ethernaut/BasicToken.sol\":519:539  balances[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      dup1\n      sload\n        /* \"ethernaut/BasicToken.sol\":519:548  balances[msg.sender] - _value */\n      dup7\n      swap1\n      sub\n        /* \"ethernaut/BasicToken.sol\":496:548  balances[msg.sender] = balances[msg.sender] - _value */\n      swap1\n      sstore\n        /* \"ethernaut/BasicToken.sol\":570:583  balances[_to] */\n      swap3\n      dup6\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      dup1\n      sload\n        /* \"ethernaut/BasicToken.sol\":570:592  balances[_to] + _value */\n      dup4\n      add\n        /* \"ethernaut/BasicToken.sol\":554:592  balances[_to] = balances[_to] + _value */\n      swap1\n      sstore\n        /* \"ethernaut/BasicToken.sol\":344:614  function transfer(address _to, uint256 _value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820700148406507f28c094e69e24d85d6c1b4e1dddb5ce16f6e5b34077cd236ff0a0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b6040516020806101e4833981016040528080516000818155600160a060020a03331681526001602052604090205550506101968061004e6000396000f3006060604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610080578063a9059cbb1461009f575b600080fd5b341561006657600080fd5b61006e6100d5565b60405190815260200160405180910390f35b341561008b57600080fd5b61006e600160a060020a03600435166100db565b34156100aa57600080fd5b6100c1600160a060020a03600435166024356100f6565b604051901515815260200160405180910390f35b60005490565b600160a060020a031660009081526001602052604090205490565b6000600160a060020a038316151561010d57600080fd5b600160a060020a03331660009081526001602052604090205482111561013257600080fd5b50600160a060020a033381166000908152600160208190526040808320805486900390559285168252919020805483019055929150505600a165627a7a72305820700148406507f28c094e69e24d85d6c1b4e1dddb5ce16f6e5b34077cd236ff0a0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x1E4 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP PUSH2 0x196 DUP1 PUSH2 0x4E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x18160DDD DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xDB JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE SWAP3 DUP6 AND DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH17 0x148406507F28C094E69E24D85D6C1B4E1 0xdd 0xdb 0x5c 0xe1 PUSH16 0x6E5B34077CD236FF0A00290000000000 ",
							"sourceMap": "26:693:0:-;;;120:133;;;;;;;;;;;;;;;;;;;;;;176:12;:29;;;-1:-1:-1;;;;;220:10:0;211:20;;;:8;120:133;211:20;;;;:37;-1:-1:-1;;26:693:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600436106100565763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166318160ddd811461005b57806370a0823114610080578063a9059cbb1461009f575b600080fd5b341561006657600080fd5b61006e6100d5565b60405190815260200160405180910390f35b341561008b57600080fd5b61006e600160a060020a03600435166100db565b34156100aa57600080fd5b6100c1600160a060020a03600435166024356100f6565b604051901515815260200160405180910390f35b60005490565b600160a060020a031660009081526001602052604090205490565b6000600160a060020a038316151561010d57600080fd5b600160a060020a03331660009081526001602052604090205482111561013257600080fd5b50600160a060020a033381166000908152600160208190526040808320805486900390559285168252919020805483019055929150505600a165627a7a72305820700148406507f28c094e69e24d85d6c1b4e1dddb5ce16f6e5b34077cd236ff0a0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x56 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x18160DDD DUP2 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH2 0xD5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6E PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xDB JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND ISZERO ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB CALLER DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 SWAP1 SUB SWAP1 SSTORE SWAP3 DUP6 AND DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH17 0x148406507F28C094E69E24D85D6C1B4E1 0xdd 0xdb 0x5c 0xe1 PUSH16 0x6E5B34077CD236FF0A00290000000000 ",
							"sourceMap": "26:693:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:83;;;;;;;;;;;;;;;;;;;;;;;;;;;618:99;;;;;;;;;;-1:-1:-1;;;;;618:99:0;;;;;344:270;;;;;;;;;;-1:-1:-1;;;;;344:270:0;;;;;;;;;;;;;;;;;;;;;;;;257:83;301:7;323:12;257:83;:::o;618:99::-;-1:-1:-1;;;;;696:16:0;674:7;696:16;;;:8;:16;;;;;;;618:99::o;344:270::-;407:4;-1:-1:-1;;;;;427:17:0;;;;419:26;;;;;;-1:-1:-1;;;;;478:10:0;469:20;;;;;:8;:20;;;;;;459:30;;;451:39;;;;;;-1:-1:-1;;;;;;528:10:0;519:20;;;;;;:8;:20;;;;;;;;;;:29;;;496:52;;570:13;;;;;;;;;;:22;;554:38;;344:270;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "81200",
								"executionCost": "40322",
								"totalCost": "121522"
							},
							"external": {
								"balanceOf(address)": "617",
								"totalSupply()": "373",
								"transfer(address,uint256)": "41434"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 719,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "MSTORE"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "CALLVALUE"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "ISZERO"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "JUMPI"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "DUP1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "REVERT"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "JUMPDEST"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "MLOAD"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "DUP1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSHSIZE"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "DUP4"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "CODECOPY"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "DUP2"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "ADD"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "MSTORE"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "DUP1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "DUP1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "MLOAD"
								},
								{
									"begin": 176,
									"end": 188,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 176,
									"end": 205,
									"name": "DUP2"
								},
								{
									"begin": 176,
									"end": 205,
									"name": "DUP2"
								},
								{
									"begin": 176,
									"end": 205,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 220,
									"end": 230,
									"name": "CALLER"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "AND"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "DUP2"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "MSTORE"
								},
								{
									"begin": 211,
									"end": 219,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 120,
									"end": 253,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "MSTORE"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "SWAP1"
								},
								{
									"begin": 211,
									"end": 231,
									"name": "KECCAK256"
								},
								{
									"begin": 211,
									"end": 248,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 719,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820700148406507f28c094e69e24d85d6c1b4e1dddb5ce16f6e5b34077cd236ff0a0029",
									".code": [
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "DIV"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "AND"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "DUP2"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 719,
											"name": "REVERT"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "CALLVALUE"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "ISZERO"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMPI"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "REVERT"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMP"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "DUP2"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "MSTORE"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "ADD"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "MLOAD"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "DUP1"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "SWAP2"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "SUB"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "RETURN"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "CALLVALUE"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "ISZERO"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "JUMPI"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "DUP1"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "REVERT"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "AND"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "JUMP"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "CALLVALUE"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMPI"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "REVERT"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "AND"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMP"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMPDEST"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "ISZERO"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "DUP2"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "MSTORE"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "ADD"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "MLOAD"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "DUP1"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "SWAP2"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "SUB"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "SWAP1"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "RETURN"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMPDEST"
										},
										{
											"begin": 301,
											"end": 308,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 323,
											"end": 335,
											"name": "SLOAD"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "SWAP1"
										},
										{
											"begin": 257,
											"end": 340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "AND"
										},
										{
											"begin": 674,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "DUP2"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "MSTORE"
										},
										{
											"begin": 696,
											"end": 704,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "MSTORE"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "KECCAK256"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "SLOAD"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "SWAP1"
										},
										{
											"begin": 618,
											"end": 717,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMPDEST"
										},
										{
											"begin": 407,
											"end": 411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 427,
											"end": 444,
											"name": "DUP4"
										},
										{
											"begin": 427,
											"end": 444,
											"name": "AND"
										},
										{
											"begin": 427,
											"end": 444,
											"name": "ISZERO"
										},
										{
											"begin": 427,
											"end": 444,
											"name": "ISZERO"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPI"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "REVERT"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 419,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 478,
											"end": 488,
											"name": "CALLER"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "AND"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "SWAP1"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "DUP2"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "MSTORE"
										},
										{
											"begin": 469,
											"end": 477,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "MSTORE"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "SWAP1"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "KECCAK256"
										},
										{
											"begin": 469,
											"end": 489,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 489,
											"name": "DUP3"
										},
										{
											"begin": 459,
											"end": 489,
											"name": "GT"
										},
										{
											"begin": 459,
											"end": 489,
											"name": "ISZERO"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "JUMPI"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "DUP1"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "REVERT"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 451,
											"end": 490,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 528,
											"end": 538,
											"name": "CALLER"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "MSTORE"
										},
										{
											"begin": 519,
											"end": 527,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "DUP2"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "MSTORE"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "DUP4"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "KECCAK256"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "DUP1"
										},
										{
											"begin": 519,
											"end": 539,
											"name": "SLOAD"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "DUP7"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SWAP1"
										},
										{
											"begin": 519,
											"end": 548,
											"name": "SUB"
										},
										{
											"begin": 496,
											"end": 548,
											"name": "SWAP1"
										},
										{
											"begin": 496,
											"end": 548,
											"name": "SSTORE"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SWAP3"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "DUP6"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "DUP3"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "MSTORE"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SWAP2"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "KECCAK256"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "DUP1"
										},
										{
											"begin": 570,
											"end": 583,
											"name": "SLOAD"
										},
										{
											"begin": 570,
											"end": 592,
											"name": "DUP4"
										},
										{
											"begin": 570,
											"end": 592,
											"name": "ADD"
										},
										{
											"begin": 554,
											"end": 592,
											"name": "SWAP1"
										},
										{
											"begin": 554,
											"end": 592,
											"name": "SSTORE"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "SWAP3"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "SWAP2"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "POP"
										},
										{
											"begin": 344,
											"end": 614,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.20+commit.3155dd80\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ethernaut/BasicToken.sol\":\"BasicToken\"},\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/BasicToken.sol\":{\"keccak256\":\"0x468b4e944ddeff0ecc0665c59af9f22b5f4e41e845980fab6fb04ddf174d7871\",\"urls\":[\"bzzr://fc87cec7f1e2d328e2a8c530db9c9eed9c9d6b2ae5a1c865f0ab87f5bbafaf1d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ethernaut/BasicToken.sol": {
				"ast": {
					"absolutePath": "ethernaut/BasicToken.sol",
					"exportedSymbols": {
						"BasicToken": [
							96
						]
					},
					"id": 97,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 96,
							"linearizedBaseContracts": [
								96
							],
							"name": "BasicToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "totalSupply_",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "53:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "53:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 96,
									"src": "77:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 6,
										"keyType": {
											"id": 4,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "85:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "77:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 5,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "96:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "170:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 12,
														"name": "totalSupply_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "176:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 13,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "191:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "176:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 15,
												"nodeType": "ExpressionStatement",
												"src": "176:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 16,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "211:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 19,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 17,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "220:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "220:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "211:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "_initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "234:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "211:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "211:37:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "BasicToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "_initialSupply",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "140:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "139:24:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:0:0"
									},
									"scope": 96,
									"src": "120:133:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "310:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 29,
													"name": "totalSupply_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "323:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "316:19:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "300:9:0"
									},
									"scope": 96,
									"src": "257:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "413:201:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "427:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "442:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "434:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "434:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "427:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "419:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "419:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "419:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 50,
																"name": "_value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "469:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 54,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 52,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 108,
																		"src": "478:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "478:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "469:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "459:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 49,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "451:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "451:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "451:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 58,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "496:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 61,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 59,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "505:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "505:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "496:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 62,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "519:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 65,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 63,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "528:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "528:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "519:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 66,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "519:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "496:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "496:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 70,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "554:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 72,
														"indexExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "563:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "554:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "570:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 75,
															"indexExpression": {
																"argumentTypes": null,
																"id": 74,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "579:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "570:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 76,
															"name": "_value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "586:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "570:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "554:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "554:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "605:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 40,
												"id": 81,
												"nodeType": "Return",
												"src": "598:11:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "362:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "375:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "407:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 38,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "407:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "406:6:0"
									},
									"scope": 96,
									"src": "344:270:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "683:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 90,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 92,
													"indexExpression": {
														"argumentTypes": null,
														"id": 91,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "705:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "696:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 89,
												"id": 93,
												"nodeType": "Return",
												"src": "689:23:0"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "637:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "636:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "673:9:0"
									},
									"scope": 96,
									"src": "618:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 97,
							"src": "26:693:0"
						}
					],
					"src": "0:719:0"
				},
				"id": 0
			}
		}
	}
}