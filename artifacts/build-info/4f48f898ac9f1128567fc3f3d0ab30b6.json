{
	"id": "4f48f898ac9f1128567fc3f3d0ab30b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"ethernaut/GateKeeperTwo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface GatekeeperTwo {\n    function enter(bytes8 _gateKey) external returns(bool);\n}\n\ncontract GatekeeperTwoInvoker {\n\n  constructor(address _add) {\n      bytes8 gateKey = bytes8(uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ (type(uint64).max));\n      GatekeeperTwo(_add).enter(gateKey);\n  }\n\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut/GateKeeperTwo.sol": {
				"GatekeeperTwo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/GateKeeperTwo.sol\":\"GatekeeperTwo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/GateKeeperTwo.sol\":{\"keccak256\":\"0x984d79563aecec0111d860ff3014713c95ec5705e37bd6a10841c63e220e5e84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5942d41b2eeb4f51d617ac66ec549722b329f15eee776161985265e37d3e1fa\",\"dweb:/ipfs/QmexNF1ALRDyq9NWeWmHYWPNpzvC4oQaXDQXxd6u7aSn3A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"GatekeeperTwoInvoker": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_add",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut/GateKeeperTwo.sol\":146:360  contract GatekeeperTwoInvoker {... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut/GateKeeperTwo.sol\":181:357  constructor(address _add) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ethernaut/GateKeeperTwo.sol\":263:285  abi.encodePacked(this) */\n  0x40\n  dup1\n  mload\n    /* \"ethernaut/GateKeeperTwo.sol\":280:284  this */\n  address\n    /* \"#utility.yul\":510:512   */\n  0x60\n    /* \"#utility.yul\":481:496   */\n  shl\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"#utility.yul\":477:522   */\n  and\n    /* \"ethernaut/GateKeeperTwo.sol\":263:285  abi.encodePacked(this) */\n  0x20\n  dup1\n  dup4\n  add\n    /* \"#utility.yul\":465:523   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"ethernaut/GateKeeperTwo.sol\":263:285  abi.encodePacked(this) */\n  dup3\n  mload\n  0x14\n  dup2\n  dup5\n  sub\n  add\n  dup2\n  mstore\n    /* \"#utility.yul\":539:551   */\n  0x34\n  dup4\n  add\n    /* \"ethernaut/GateKeeperTwo.sol\":263:285  abi.encodePacked(this) */\n  swap4\n  dup5\n  swap1\n  mstore\n    /* \"ethernaut/GateKeeperTwo.sol\":253:286  keccak256(abi.encodePacked(this)) */\n  dup1\n  mload\n  swap2\n  add\n  keccak256\n  shl(0xe1, 0x19b81027)\n    /* \"ethernaut/GateKeeperTwo.sol\":318:352  GatekeeperTwo(_add).enter(gateKey) */\n  swap1\n  swap3\n  mstore\n  not(sub(shl(0xc0, 0x01), 0x01))\n    /* \"ethernaut/GateKeeperTwo.sol\":239:288  uint64(bytes8(keccak256(abi.encodePacked(this)))) */\n  0xc0\n  swap3\n  dup4\n  shr\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"ethernaut/GateKeeperTwo.sol\":239:309  uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ (type(uint64).max) */\n  xor\n    /* \"ethernaut/GateKeeperTwo.sol\":232:310  bytes8(uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ (type(uint64).max)) */\n  swap1\n  swap3\n  shl\n    /* \"#utility.yul\":724:761   */\n  swap2\n  dup3\n  and\n    /* \"ethernaut/GateKeeperTwo.sol\":318:352  GatekeeperTwo(_add).enter(gateKey) */\n  0x38\n  dup3\n  add\n    /* \"#utility.yul\":706:762   */\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ethernaut/GateKeeperTwo.sol\":318:343  GatekeeperTwo(_add).enter */\n  dup4\n  and\n  swap1\n  0x3370204e\n  swap1\n    /* \"#utility.yul\":679:697   */\n  0x58\n  add\n    /* \"ethernaut/GateKeeperTwo.sol\":318:352  GatekeeperTwo(_add).enter(gateKey) */\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  gas\n  call\n  iszero\n  dup1\n  iszero\n  tag_11\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_11:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"ethernaut/GateKeeperTwo.sol\":207:357  {... */\n  pop\n    /* \"ethernaut/GateKeeperTwo.sol\":181:357  constructor(address _add) {... */\n  pop\n    /* \"ethernaut/GateKeeperTwo.sol\":146:360  contract GatekeeperTwoInvoker {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":773:1050   */\ntag_13:\n    /* \"#utility.yul\":840:846   */\n  0x00\n    /* \"#utility.yul\":893:895   */\n  0x20\n    /* \"#utility.yul\":881:890   */\n  dup3\n    /* \"#utility.yul\":872:879   */\n  dup5\n    /* \"#utility.yul\":868:891   */\n  sub\n    /* \"#utility.yul\":864:896   */\n  slt\n    /* \"#utility.yul\":861:913   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x00\n    /* \"#utility.yul\":906:907   */\n  dup1\n    /* \"#utility.yul\":899:911   */\n  revert\n    /* \"#utility.yul\":861:913   */\ntag_22:\n    /* \"#utility.yul\":941:950   */\n  dup2\n    /* \"#utility.yul\":935:951   */\n  mload\n    /* \"#utility.yul\":994:999   */\n  dup1\n    /* \"#utility.yul\":987:1000   */\n  iszero\n    /* \"#utility.yul\":980:1001   */\n  iszero\n    /* \"#utility.yul\":973:978   */\n  dup2\n    /* \"#utility.yul\":970:1002   */\n  eq\n    /* \"#utility.yul\":960:1020   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":1016:1017   */\n  0x00\n    /* \"#utility.yul\":1013:1014   */\n  dup1\n    /* \"#utility.yul\":1006:1018   */\n  revert\n    /* \"#utility.yul\":773:1050   */\ntag_15:\n    /* \"ethernaut/GateKeeperTwo.sol\":146:360  contract GatekeeperTwoInvoker {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut/GateKeeperTwo.sol\":146:360  contract GatekeeperTwoInvoker {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fffe39ef8ed5d4513b3a90e64f16bf3c8a411a988f02f39abc4d64949ae8e1b864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_47": {
									"entryPoint": null,
									"id": 47,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_contract$_GatekeeperTwoInvoker_$48__to_t_address__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1052:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "455:102:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "472:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "485:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "489:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "481:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "510:2:1",
																										"type": "",
																										"value": "96"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "514:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "506:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "506:10:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "518:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "502:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "502:18:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "498:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "498:23:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "477:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "477:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "465:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "532:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "543:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "539:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "532:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_contract$_GatekeeperTwoInvoker_$48__to_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "431:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "436:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "447:3:1",
														"type": ""
													}
												],
												"src": "309:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "661:107:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "671:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "694:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "679:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "671:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "713:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "728:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "748:3:1",
																										"type": "",
																										"value": "192"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "753:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "744:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "744:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "757:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "740:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "740:19:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "736:24:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "724:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "724:37:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "706:56:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "630:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "652:4:1",
														"type": ""
													}
												],
												"src": "562:206:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "851:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "897:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "893:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "864:32:1"
															},
															"nodeType": "YulIf",
															"src": "861:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "922:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "941:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "935:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "926:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1004:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1013:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1006:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1006:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1006:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "973:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "994:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "987:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "987:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "980:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "980:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "970:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "970:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:40:1"
															},
															"nodeType": "YulIf",
															"src": "960:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1029:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1039:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1029:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "817:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "828:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "840:6:1",
														"type": ""
													}
												],
												"src": "773:277:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_contract$_GatekeeperTwoInvoker_$48__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(sub(shl(96, 1), 1))))\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_bytes8__to_t_bytes8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, not(sub(shl(192, 1), 1))))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161018c38038061018c83398101604081905261002f916100ed565b604080513060601b6001600160601b03191660208083019190915282516014818403018152603483019384905280519101206319b8102760e11b9092526001600160c01b031960c092831c6001600160401b031890921b91821660388201526001600160a01b03831690633370204e906058016020604051808303816000875af11580156100c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e5919061011d565b50505061013f565b6000602082840312156100ff57600080fd5b81516001600160a01b038116811461011657600080fd5b9392505050565b60006020828403121561012f57600080fd5b8151801515811461011657600080fd5b603f8061014d6000396000f3fe6080604052600080fdfea2646970667358221220fffe39ef8ed5d4513b3a90e64f16bf3c8a411a988f02f39abc4d64949ae8e1b864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x18C CODESIZE SUB DUP1 PUSH2 0x18C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH1 0x14 DUP2 DUP5 SUB ADD DUP2 MSTORE PUSH1 0x34 DUP4 ADD SWAP4 DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH4 0x19B81027 PUSH1 0xE1 SHL SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT PUSH1 0xC0 SWAP3 DUP4 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB XOR SWAP1 SWAP3 SHL SWAP2 DUP3 AND PUSH1 0x38 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x3370204E SWAP1 PUSH1 0x58 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x11D JUMP JUMPDEST POP POP POP PUSH2 0x13F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F DUP1 PUSH2 0x14D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT INVALID CODECOPY 0xEF DUP15 0xD5 0xD4 MLOAD EXTCODESIZE GASPRICE SWAP1 0xE6 0x4F AND 0xBF EXTCODECOPY DUP11 COINBASE BYTE SWAP9 DUP16 MUL RETURN SWAP11 0xBC 0x4D PUSH5 0x949AE8E1B8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "146:214:0:-:0;;;181:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;263:22;;;280:4;510:2:1;481:15;-1:-1:-1;;;;;;477:45:1;263:22:0;;;;465:58:1;;;;263:22:0;;;;;;;;;539:12:1;;;263:22:0;;;;253:33;;;;;-1:-1:-1;;;318:34:0;;;-1:-1:-1;;;;;;239:49:0;;;;-1:-1:-1;;;;;239:70:0;232:78;;;724:37:1;;;318:34:0;;;706:56:1;-1:-1:-1;;;;;318:25:0;;;;;679:18:1;;318:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;207:150;181:176;146:214;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;773:277::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;941:9;935:16;994:5;987:13;980:21;973:5;970:32;960:60;;1016:1;1013;1006:12;773:277;146:214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fffe39ef8ed5d4513b3a90e64f16bf3c8a411a988f02f39abc4d64949ae8e1b864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT INVALID CODECOPY 0xEF DUP15 0xD5 0xD4 MLOAD EXTCODESIZE GASPRICE SWAP1 0xE6 0x4F AND 0xBF EXTCODECOPY DUP11 COINBASE BYTE SWAP9 DUP16 MUL RETURN SWAP11 0xBC 0x4D PUSH5 0x949AE8E1B8 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "146:214:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 181,
									"end": 357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 181,
									"end": 357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 280,
									"end": 284,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 510,
									"end": 512,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 481,
									"end": 496,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 477,
									"end": 522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 263,
									"end": 285,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 465,
									"end": 523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 465,
									"end": 523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 465,
									"end": 523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 465,
									"end": 523,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 539,
									"end": 551,
									"name": "PUSH",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 539,
									"end": 551,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 539,
									"end": 551,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 263,
									"end": 285,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 263,
									"end": 285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 253,
									"end": 286,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 253,
									"end": 286,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 253,
									"end": 286,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 253,
									"end": 286,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 253,
									"end": 286,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "19B81027"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 318,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 239,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 239,
									"end": 288,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 239,
									"end": 288,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 239,
									"end": 288,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 239,
									"end": 309,
									"name": "XOR",
									"source": 0
								},
								{
									"begin": 232,
									"end": 310,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 232,
									"end": 310,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 232,
									"end": 310,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 724,
									"end": 761,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 724,
									"end": 761,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 724,
									"end": 761,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 706,
									"end": 762,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 318,
									"end": 343,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 318,
									"end": 343,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 318,
									"end": 343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 343,
									"name": "PUSH",
									"source": 0,
									"value": "3370204E"
								},
								{
									"begin": 318,
									"end": 343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 679,
									"end": 697,
									"name": "PUSH",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 679,
									"end": 697,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "CALL",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 318,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 318,
									"end": 352,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 318,
									"end": 352,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 207,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 773,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 773,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 840,
									"end": 846,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 893,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 881,
									"end": 890,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 872,
									"end": 879,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 868,
									"end": 891,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 864,
									"end": 896,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 861,
									"end": 913,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 861,
									"end": 913,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 861,
									"end": 913,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 906,
									"end": 907,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 899,
									"end": 911,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 861,
									"end": 913,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 861,
									"end": 913,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 941,
									"end": 950,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 935,
									"end": 951,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 987,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 980,
									"end": 1001,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 973,
									"end": 978,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1002,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 960,
									"end": 1020,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 960,
									"end": 1020,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1016,
									"end": 1017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1006,
									"end": 1018,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 773,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 773,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 146,
									"end": 360,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 360,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fffe39ef8ed5d4513b3a90e64f16bf3c8a411a988f02f39abc4d64949ae8e1b864736f6c63430008120033",
									".code": [
										{
											"begin": 146,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 146,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 146,
											"end": 360,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ethernaut/GateKeeperTwo.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_add\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/GateKeeperTwo.sol\":\"GatekeeperTwoInvoker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/GateKeeperTwo.sol\":{\"keccak256\":\"0x984d79563aecec0111d860ff3014713c95ec5705e37bd6a10841c63e220e5e84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5942d41b2eeb4f51d617ac66ec549722b329f15eee776161985265e37d3e1fa\",\"dweb:/ipfs/QmexNF1ALRDyq9NWeWmHYWPNpzvC4oQaXDQXxd6u7aSn3A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ethernaut/GateKeeperTwo.sol": {
				"ast": {
					"absolutePath": "ethernaut/GateKeeperTwo.sol",
					"exportedSymbols": {
						"GatekeeperTwo": [
							9
						],
						"GatekeeperTwoInvoker": [
							48
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GatekeeperTwo",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "GatekeeperTwo",
							"nameLocation": "67:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3370204e",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nameLocation": "96:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_gateKey",
												"nameLocation": "109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 2,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "102:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:17:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "136:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "136:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:6:0"
									},
									"scope": 9,
									"src": "87:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 49,
							"src": "57:87:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GatekeeperTwoInvoker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 48,
							"linearizedBaseContracts": [
								48
							],
							"name": "GatekeeperTwoInvoker",
							"nameLocation": "155:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "207:150:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "gateKey",
														"nameLocation": "222:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "215:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														},
														"typeName": {
															"id": 14,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "215:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 25,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "280:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_GatekeeperTwoInvoker_$48",
																									"typeString": "contract GatekeeperTwoInvoker"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_GatekeeperTwoInvoker_$48",
																									"typeString": "contract GatekeeperTwoInvoker"
																								}
																							],
																							"expression": {
																								"id": 23,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967295,
																								"src": "263:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 24,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "267:12:0",
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"src": "263:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 26,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "263:22:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 22,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967288,
																					"src": "253:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 27,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "253:33:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 21,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "246:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes8_$",
																				"typeString": "type(bytes8)"
																			},
																			"typeName": {
																				"id": 20,
																				"name": "bytes8",
																				"nodeType": "ElementaryTypeName",
																				"src": "246:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 28,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "246:41:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "239:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 18,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "239:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "239:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 32,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "297:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 31,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "297:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 30,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "292:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "292:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "305:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "292:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 35,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "291:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "239:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "232:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes8_$",
															"typeString": "type(bytes8)"
														},
														"typeName": {
															"id": 16,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "232:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "232:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "215:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 43,
															"name": "gateKey",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "344:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 40,
																	"name": "_add",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "332:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 39,
																"name": "GatekeeperTwo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "318:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_GatekeeperTwo_$9_$",
																	"typeString": "type(contract GatekeeperTwo)"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "318:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_GatekeeperTwo_$9",
																"typeString": "contract GatekeeperTwo"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "338:5:0",
														"memberName": "enter",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "318:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes8_$returns$_t_bool_$",
															"typeString": "function (bytes8) external returns (bool)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "318:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "318:34:0"
											}
										]
									},
									"id": 47,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "_add",
												"nameLocation": "201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:14:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:0:0"
									},
									"scope": 48,
									"src": "181:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 49,
							"src": "146:214:0",
							"usedErrors": []
						}
					],
					"src": "32:328:0"
				},
				"id": 0
			}
		}
	}
}