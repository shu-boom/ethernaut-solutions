{
	"id": "fc846df48ae4b1906259861031de3793",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		},
		"sources": {
			"ethernaut/CoinFlipProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ncontract CoinFlipProxy {\n\n    address delegate;\n    address owner = msg.sender;\n\n    function upgradeDelegate(address newDelegateAddress) public {\n        require(msg.sender == owner);\n        delegate = newDelegateAddress;\n    }\n\n    fallback() external payable {\n        assembly {\n            let _target := sload(0)\n            calldatacopy(0x0, 0x0, calldatasize())\n            let result := delegatecall(gas(), _target, 0x0, calldatasize(), 0x0, 0)\n            returndatacopy(0x0, 0x0, returndatasize())\n            switch result case 0 {revert(0, 0)} default {return (0, returndatasize())}\n        }\n    }\n\n    receive() external payable {\n          revert(\"Not Allowed\");\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"ethernaut/CoinFlipProxy.sol": {
				"CoinFlipProxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newDelegateAddress",
									"type": "address"
								}
							],
							"name": "upgradeDelegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ethernaut/CoinFlipProxy.sol\":58:745  contract CoinFlipProxy {... */\n  mstore(0x40, 0x80)\n    /* \"ethernaut/CoinFlipProxy.sol\":110:136  address owner = msg.sender */\n  0x01\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ethernaut/CoinFlipProxy.sol\":126:136  msg.sender */\n  caller\n    /* \"ethernaut/CoinFlipProxy.sol\":110:136  address owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"ethernaut/CoinFlipProxy.sol\":58:745  contract CoinFlipProxy {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ethernaut/CoinFlipProxy.sol\":58:745  contract CoinFlipProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2da4e75c\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"ethernaut/CoinFlipProxy.sol\":715:736  revert(\"Not Allowed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"ethernaut/CoinFlipProxy.sol\":715:736  revert(\"Not Allowed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x0b\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n      shl(0xaa, 0x139bdd08105b1b1bddd959)\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:308   */\n      mstore\n        /* \"#utility.yul\":325:343   */\n      0x64\n      add\n        /* \"ethernaut/CoinFlipProxy.sol\":715:736  revert(\"Not Allowed\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ethernaut/CoinFlipProxy.sol\":58:745  contract CoinFlipProxy {... */\n    tag_2:\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      0x00\n      dup1\n        /* \"ethernaut/CoinFlipProxy.sol\":369:377  sload(0) */\n      sload\n        /* \"ethernaut/CoinFlipProxy.sol\":413:427  calldatasize() */\n      calldatasize\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      dup3\n      dup4\n        /* \"ethernaut/CoinFlipProxy.sol\":390:428  calldatacopy(0x0, 0x0, calldatasize()) */\n      calldatacopy\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      dup2\n      dup3\n        /* \"ethernaut/CoinFlipProxy.sol\":413:427  calldatasize() */\n      calldatasize\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      dup5\n        /* \"ethernaut/CoinFlipProxy.sol\":475:482  _target */\n      dup5\n        /* \"ethernaut/CoinFlipProxy.sol\":468:473  gas() */\n      gas\n        /* \"ethernaut/CoinFlipProxy.sol\":455:512  delegatecall(gas(), _target, 0x0, calldatasize(), 0x0, 0) */\n      delegatecall\n        /* \"ethernaut/CoinFlipProxy.sol\":441:512  let result := delegatecall(gas(), _target, 0x0, calldatasize(), 0x0, 0) */\n      swap1\n      pop\n        /* \"ethernaut/CoinFlipProxy.sol\":550:566  returndatasize() */\n      returndatasize\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      dup3\n      dup4\n        /* \"ethernaut/CoinFlipProxy.sol\":525:567  returndatacopy(0x0, 0x0, returndatasize()) */\n      returndatacopy\n        /* \"ethernaut/CoinFlipProxy.sol\":587:593  result */\n      dup1\n        /* \"ethernaut/CoinFlipProxy.sol\":594:615  case 0 {revert(0, 0)} */\n      dup1\n      iszero\n      tag_11\n      jumpi\n        /* \"ethernaut/CoinFlipProxy.sol\":636:652  returndatasize() */\n      returndatasize\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      dup4\n        /* \"ethernaut/CoinFlipProxy.sol\":625:653  return (0, returndatasize()) */\n      return\n        /* \"ethernaut/CoinFlipProxy.sol\":594:615  case 0 {revert(0, 0)} */\n    tag_11:\n        /* \"ethernaut/CoinFlipProxy.sol\":375:376  0 */\n      dup3\n      dup4\n        /* \"ethernaut/CoinFlipProxy.sol\":602:614  revert(0, 0) */\n      revert\n        /* \"ethernaut/CoinFlipProxy.sol\":580:654  switch result case 0 {revert(0, 0)} default {return (0, returndatasize())} */\n    tag_10:\n      stop\n        /* \"ethernaut/CoinFlipProxy.sol\":143:287  function upgradeDelegate(address newDelegateAddress) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_10\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"ethernaut/CoinFlipProxy.sol\":235:240  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"ethernaut/CoinFlipProxy.sol\":221:231  msg.sender */\n      caller\n        /* \"ethernaut/CoinFlipProxy.sol\":221:240  msg.sender == owner */\n      eq\n        /* \"ethernaut/CoinFlipProxy.sol\":213:241  require(msg.sender == owner) */\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n        /* \"ethernaut/CoinFlipProxy.sol\":251:259  delegate */\n      0x00\n        /* \"ethernaut/CoinFlipProxy.sol\":251:280  delegate = newDelegateAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ethernaut/CoinFlipProxy.sol\":143:287  function upgradeDelegate(address newDelegateAddress) public {... */\n      jump\t// out\n        /* \"#utility.yul\":354:640   */\n    tag_15:\n        /* \"#utility.yul\":413:419   */\n      0x00\n        /* \"#utility.yul\":466:468   */\n      0x20\n        /* \"#utility.yul\":454:463   */\n      dup3\n        /* \"#utility.yul\":445:452   */\n      dup5\n        /* \"#utility.yul\":441:464   */\n      sub\n        /* \"#utility.yul\":437:469   */\n      slt\n        /* \"#utility.yul\":434:486   */\n      iszero\n      tag_22\n      jumpi\n        /* \"#utility.yul\":482:483   */\n      0x00\n        /* \"#utility.yul\":479:480   */\n      dup1\n        /* \"#utility.yul\":472:484   */\n      revert\n        /* \"#utility.yul\":434:486   */\n    tag_22:\n        /* \"#utility.yul\":508:531   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":560:591   */\n      dup2\n      and\n        /* \"#utility.yul\":550:592   */\n      dup2\n      eq\n        /* \"#utility.yul\":540:610   */\n      tag_23\n      jumpi\n        /* \"#utility.yul\":606:607   */\n      0x00\n        /* \"#utility.yul\":603:604   */\n      dup1\n        /* \"#utility.yul\":596:608   */\n      revert\n        /* \"#utility.yul\":540:610   */\n    tag_23:\n        /* \"#utility.yul\":629:634   */\n      swap4\n        /* \"#utility.yul\":354:640   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122070e51f14de63eeb77d14d9eea65bff90fbdb683185976531124322e12c1b5b1664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052600180546001600160a01b0319163317905534801561002257600080fd5b50610141806100326000396000f3fe6080604052600436106100225760003560e01c80632da4e75c1461008757610061565b366100615760405162461bcd60e51b815260206004820152600b60248201526a139bdd08105b1b1bddd95960aa1b604482015260640160405180910390fd5b600080543682833781823684845af490503d82833e808015610081573d83f35b8283fd5b005b34801561009357600080fd5b506100856100a23660046100db565b6001546001600160a01b031633146100b957600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156100ed57600080fd5b81356001600160a01b038116811461010457600080fd5b939250505056fea264697066735822122070e51f14de63eeb77d14d9eea65bff90fbdb683185976531124322e12c1b5b1664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DA4E75C EQ PUSH2 0x87 JUMPI PUSH2 0x61 JUMP JUMPDEST CALLDATASIZE PUSH2 0x61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08105B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x81 JUMPI RETURNDATASIZE DUP4 RETURN JUMPDEST DUP3 DUP4 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xE51F14DE63EEB77D14D9EEA65BFF90FBDB PUSH9 0x3185976531124322E1 0x2C SHL JUMPDEST AND PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "58:687:0:-:0;;;110:26;;;-1:-1:-1;;;;;;110:26:0;126:10;110:26;;;58:687;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeDelegate_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d5291a1ed07e1905bd010f269385c3c113a1c6254d1cc05ac22e0b9ff4a0b9cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:642:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:161:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "4e6f7420416c6c6f776564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:13:1",
																		"type": "",
																		"value": "Not Allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "317:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "329:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "340:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "325:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "325:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "317:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d5291a1ed07e1905bd010f269385c3c113a1c6254d1cc05ac22e0b9ff4a0b9cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "424:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "470:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "479:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "482:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "472:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "472:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "472:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "445:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "454:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "441:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "466:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "437:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:32:1"
															},
															"nodeType": "YulIf",
															"src": "434:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "495:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "521:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "508:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "499:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "594:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "603:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "596:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "596:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "596:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "564:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "579:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "575:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "575:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "588:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "560:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "560:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "550:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "550:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:50:1"
															},
															"nodeType": "YulIf",
															"src": "540:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "619:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "629:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "619:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "390:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "401:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "413:6:1",
														"type": ""
													}
												],
												"src": "354:286:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_d5291a1ed07e1905bd010f269385c3c113a1c6254d1cc05ac22e0b9ff4a0b9cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not Allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c80632da4e75c1461008757610061565b366100615760405162461bcd60e51b815260206004820152600b60248201526a139bdd08105b1b1bddd95960aa1b604482015260640160405180910390fd5b600080543682833781823684845af490503d82833e808015610081573d83f35b8283fd5b005b34801561009357600080fd5b506100856100a23660046100db565b6001546001600160a01b031633146100b957600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000602082840312156100ed57600080fd5b81356001600160a01b038116811461010457600080fd5b939250505056fea264697066735822122070e51f14de63eeb77d14d9eea65bff90fbdb683185976531124322e12c1b5b1664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2DA4E75C EQ PUSH2 0x87 JUMPI PUSH2 0x61 JUMP JUMPDEST CALLDATASIZE PUSH2 0x61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08105B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLDATASIZE DUP3 DUP4 CALLDATACOPY DUP2 DUP3 CALLDATASIZE DUP5 DUP5 GAS DELEGATECALL SWAP1 POP RETURNDATASIZE DUP3 DUP4 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x81 JUMPI RETURNDATASIZE DUP4 RETURN JUMPDEST DUP3 DUP4 REVERT JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x85 PUSH2 0xA2 CALLDATASIZE PUSH1 0x4 PUSH2 0xDB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xE51F14DE63EEB77D14D9EEA65BFF90FBDB PUSH9 0x3185976531124322E1 0x2C SHL JUMPDEST AND PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "58:687:0:-:0;;;;;;;;;;;;;;;;;;;;;;;715:21;;-1:-1:-1;;;715:21:0;;216:2:1;715:21:0;;;198::1;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:1;;;267:41;325:18;;715:21:0;;;;;;;58:687;375:1;;369:8;413:14;375:1;;390:38;375:1;;413:14;375:1;475:7;468:5;455:57;441:71;;550:16;375:1;;525:42;587:6;594:21;;;;636:16;375:1;625:28;594:21;375:1;;602:12;580:74;;143:144;;;;;;;;;;-1:-1:-1;143:144:0;;;;;:::i;:::-;235:5;;-1:-1:-1;;;;;235:5:0;221:10;:19;213:28;;;;;;251:8;:29;;-1:-1:-1;;;;;;251:29:0;-1:-1:-1;;;;;251:29:0;;;;;;;;;;143:144::o;354:286:1:-;413:6;466:2;454:9;445:7;441:23;437:32;434:52;;;482:1;479;472:12;434:52;508:23;;-1:-1:-1;;;;;560:31:1;;550:42;;540:70;;606:1;603;596:12;540:70;629:5;354:286;-1:-1:-1;;;354:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "64200",
								"executionCost": "24352",
								"totalCost": "88552"
							},
							"external": {
								"": "infinite",
								"upgradeDelegate(address)": "26642"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 110,
									"end": 136,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 110,
									"end": 136,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 110,
									"end": 136,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 110,
									"end": 136,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 126,
									"end": 136,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 110,
									"end": 136,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 110,
									"end": 136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 110,
									"end": 136,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 745,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 745,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070e51f14de63eeb77d14d9eea65bff90fbdb683185976531124322e12c1b5b1664736f6c63430008120033",
									".code": [
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH",
											"source": 0,
											"value": "2DA4E75C"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 715,
											"end": 736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 715,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 715,
											"end": 736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08105B1B1BDDD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 325,
											"end": 343,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 325,
											"end": 343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 715,
											"end": 736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 715,
											"end": 736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 715,
											"end": 736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 745,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 369,
											"end": 377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 413,
											"end": 427,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 390,
											"end": 428,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 413,
											"end": 427,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 475,
											"end": 482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 468,
											"end": 473,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 455,
											"end": 512,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 441,
											"end": 512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 441,
											"end": 512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 566,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 525,
											"end": 567,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 587,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 615,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 615,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 594,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 594,
											"end": 615,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 636,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 625,
											"end": 653,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 594,
											"end": 615,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 594,
											"end": 615,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 375,
											"end": 376,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 602,
											"end": 614,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 580,
											"end": 654,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 580,
											"end": 654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 580,
											"end": 654,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 143,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 143,
											"end": 287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 143,
											"end": 287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 235,
											"end": 240,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 235,
											"end": 240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 235,
											"end": 240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 221,
											"end": 231,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 221,
											"end": 240,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 213,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 213,
											"end": 241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 213,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 213,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 213,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 251,
											"end": 259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 251,
											"end": 280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 251,
											"end": 280,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 143,
											"end": 287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 354,
											"end": 640,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 354,
											"end": 640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 413,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 466,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 445,
											"end": 452,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 441,
											"end": 464,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 437,
											"end": 469,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 434,
											"end": 486,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 434,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 434,
											"end": 486,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 482,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 479,
											"end": 480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 434,
											"end": 486,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 434,
											"end": 486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 508,
											"end": 531,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 508,
											"end": 531,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 560,
											"end": 591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 550,
											"end": 592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 550,
											"end": 592,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 540,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 540,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 540,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 540,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 354,
											"end": 640,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 354,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ethernaut/CoinFlipProxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"upgradeDelegate(address)": "2da4e75c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDelegateAddress\",\"type\":\"address\"}],\"name\":\"upgradeDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ethernaut/CoinFlipProxy.sol\":\"CoinFlipProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ethernaut/CoinFlipProxy.sol\":{\"keccak256\":\"0xda34468da54bb049f547b9f7bd2e8413a8989d24a8aefe7c24d9bf9b6fb106e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a238be7a07e559087aaf3f377b9977aa163f2699c797973c0ae24bdba93fab5\",\"dweb:/ipfs/QmVtmnPXJKkDGrksxeMYHtxEZEJRBkn8GgU89dPxC9esuU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "ethernaut/CoinFlipProxy.sol:CoinFlipProxy",
								"label": "delegate",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 7,
								"contract": "ethernaut/CoinFlipProxy.sol:CoinFlipProxy",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ethernaut/CoinFlipProxy.sol": {
				"ast": {
					"absolutePath": "ethernaut/CoinFlipProxy.sol",
					"exportedSymbols": {
						"CoinFlipProxy": [
							38
						]
					},
					"id": 39,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CoinFlipProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "CoinFlipProxy",
							"nameLocation": "67:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "delegate",
									"nameLocation": "96:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "88:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "118:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "110:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "110:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"expression": {
											"id": 5,
											"name": "msg",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967281,
											"src": "126:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_magic_message",
												"typeString": "msg"
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"memberLocation": "130:6:0",
										"memberName": "sender",
										"nodeType": "MemberAccess",
										"src": "126:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "203:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 13,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "221:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "225:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "221:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 15,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "235:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "221:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "213:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "213:28:0"
											},
											{
												"expression": {
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 19,
														"name": "delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "251:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 20,
														"name": "newDelegateAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "262:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "251:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "251:29:0"
											}
										]
									},
									"functionSelector": "2da4e75c",
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeDelegate",
									"nameLocation": "152:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "newDelegateAddress",
												"nameLocation": "176:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "168:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:28:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:0:0"
									},
									"scope": 38,
									"src": "143:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "321:349:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "340:324:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "354:23:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "375:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "369:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:8:0"
															},
															"variables": [
																{
																	"name": "_target",
																	"nodeType": "YulTypedName",
																	"src": "358:7:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "403:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "408:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "413:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "390:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "390:38:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "441:71:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "468:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "468:5:0"
																	},
																	{
																		"name": "_target",
																		"nodeType": "YulIdentifier",
																		"src": "475:7:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "484:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "489:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "505:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "510:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "455:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "455:57:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "445:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "545:3:0",
																		"type": "",
																		"value": "0x0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "550:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "550:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "525:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:42:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "525:42:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "601:14:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "609:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "612:1:0",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "602:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "602:12:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "602:12:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "594:21:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "599:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "624:30:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "633:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "636:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "636:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "625:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "625:28:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "625:28:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "616:38:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "587:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "580:74:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [],
												"id": 27,
												"nodeType": "InlineAssembly",
												"src": "331:333:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:0:0"
									},
									"scope": 38,
									"src": "293:377:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "703:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "4e6f7420416c6c6f776564",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "722:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d5291a1ed07e1905bd010f269385c3c113a1c6254d1cc05ac22e0b9ff4a0b9cc",
																"typeString": "literal_string \"Not Allowed\""
															},
															"value": "Not Allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d5291a1ed07e1905bd010f269385c3c113a1c6254d1cc05ac22e0b9ff4a0b9cc",
																"typeString": "literal_string \"Not Allowed\""
															}
														],
														"id": 32,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "715:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "715:21:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:0"
									},
									"scope": 38,
									"src": "676:67:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 39,
							"src": "58:687:0",
							"usedErrors": []
						}
					],
					"src": "32:713:0"
				},
				"id": 0
			}
		}
	}
}